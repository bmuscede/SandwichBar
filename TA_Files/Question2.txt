"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"

"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"std::move_iterator<Food**>::base() const"

"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::move_iterator<Food**>::base() const"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"

"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::move_iterator<Ingredient**>::base() const"

"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"

"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"

"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"

"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"

"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"Ingredient** std::__copy_move_backward_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"

"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"

"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"operator new(unsigned, void*)"

"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"

"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"

"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"void std::__advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, int>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, int, std::random_access_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+=(int)"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"Ingredient** std::__copy_move_backward_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_backward_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::move_iterator<Ingredient**> std::make_move_iterator<Ingredient**>(Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"

"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::random_access_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"

"std::allocator<Ingredient*>::allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"

"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"operator new(unsigned, void*)"

"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"

"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"

"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"operator new(unsigned, void*)"

"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"

"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"operator new(unsigned, void*)"

"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"void std::advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, unsigned>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+=(int)"
"void std::__advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, int>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, int, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"Ingredient** std::move_backward<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_backward_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_backward_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"

"Ingredient** std::__uninitialized_move_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**> std::make_move_iterator<Ingredient**>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"

"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"operator new(unsigned, void*)"

"void std::_Destroy<Food**>(Food**, Food**)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"

"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::~allocator()"

"std::allocator<Food*>::~allocator()"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"

"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::move<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"

"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"

"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"operator new(unsigned, void*)"

"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_insert<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::forward_iterator_tag)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+=(int)"
"Ingredient** std::__copy_move_backward_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"void std::__advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, int>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, int, std::random_access_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_backward_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::move_iterator<Ingredient**> std::make_move_iterator<Ingredient**>(Ingredient**)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"void std::advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, unsigned>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::move_backward<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_move_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"

"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"

"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"

"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::~allocator()"

"std::allocator<Ingredient*>::~allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"

"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"void std::_Destroy<Food**>(Food**, Food**)"

"std::vector<Food*, std::allocator<Food*> >::~vector()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"

"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::vector<Food*, std::allocator<Food*> >::begin() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"

"std::vector<Food*, std::allocator<Food*> >::end() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"

"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"

"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::move<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"

"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_insert_dispatch<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::__false_type)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+=(int)"
"Ingredient** std::__copy_move_backward_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"void std::__advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, int>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, int, std::random_access_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_backward_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::move_iterator<Ingredient**> std::make_move_iterator<Ingredient**>(Ingredient**)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"void std::advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, unsigned>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::move_backward<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_move_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_insert<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::forward_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"

"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator<Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, __gnu_cxx::__enable_if<std::__are_same<Ingredient**, Ingredient**>::__value, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__type> const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"

"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"

"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"

"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"_ZNSt6vectorIP4FoodSaIS1_EE9push_backEOS1_"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"_ZSt4moveIRP4FoodEONSt16remove_referenceIT_E4typeEOS4_"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"operator new(unsigned, void*)"

"ComplexRecipe::updateReferences(std::vector<Food*, std::allocator<Food*> >)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZSt4moveIRP4FoodEONSt16remove_referenceIT_E4typeEOS4_"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"_ZNSt6vectorIP4FoodSaIS1_EE9push_backEOS1_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"Recipe::getSubComponents()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP4FoodEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::vector<Food*, std::allocator<Food*> >::operator[](unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_range_check(unsigned) const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::push_back(Food* const&)"
"Food::addReferences(std::vector<Food*, std::allocator<Food*> >)"
"std::vector<Food*, std::allocator<Food*> >::at(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"operator new(unsigned, void*)"

"ComplexRecipe::findRemoval(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"ComplexRecipe::containsIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"ComplexRecipe::findRemoval(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Recipe::findIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::erase(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::move<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::vector<Ingredient*, std::allocator<Ingredient*> >::insert<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, void>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+=(int)"
"Ingredient** std::__copy_move_backward_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"void std::__advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, int>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, int, std::random_access_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_backward_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::move_iterator<Ingredient**> std::make_move_iterator<Ingredient**>(Ingredient**)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"void std::advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, unsigned>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::move_backward<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_move_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_insert<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::forward_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_insert_dispatch<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::__false_type)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"ComplexRecipe::getIngredients()"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+=(int)"
"Ingredient** std::__copy_move_backward_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"void std::__advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, int>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, int, std::random_access_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_backward_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::move_iterator<Ingredient**> std::make_move_iterator<Ingredient**>(Ingredient**)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"void std::advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, unsigned>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::move_backward<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_move_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::move<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_insert<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::forward_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_insert_dispatch<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::__false_type)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator<Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, __gnu_cxx::__enable_if<std::__are_same<Ingredient**, Ingredient**>::__value, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__type> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::erase(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::vector<Ingredient*, std::allocator<Ingredient*> >::insert<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, void>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"Recipe::getSubComponents()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"_ZN13ComplexRecipe12printDetailsB5cxx11Ev"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::_Setfill<char> std::setfill<char>(char)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZN6Recipe15printNameStatusB5cxx11Ev"
"std::setprecision(int)"
"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::vector<Food*, std::allocator<Food*> >::operator[](unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_range_check(unsigned) const"
"std::vector<Food*, std::allocator<Food*> >::at(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"_ZN4Food15printReferencesB5cxx11Ev"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"_ZN13ComplexRecipe5printB5cxx11Ev"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::_Setfill<char> std::setfill<char>(char)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZN6Recipe15printNameStatusB5cxx11Ev"
"std::setprecision(int)"
"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"ComplexRecipe::make(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+=(int)"
"Ingredient** std::__copy_move_backward_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"void std::__advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, int>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, int, std::random_access_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_backward_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::move_iterator<Ingredient**> std::make_move_iterator<Ingredient**>(Ingredient**)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"void std::advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, unsigned>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::move_backward<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_move_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_insert<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::forward_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_insert_dispatch<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::__false_type)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator<Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, __gnu_cxx::__enable_if<std::__are_same<Ingredient**, Ingredient**>::__value, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__type> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::vector<Ingredient*, std::allocator<Ingredient*> >::insert<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, void>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"ComplexRecipe::mergeRemovals(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::makeIngredients(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Recipe::canMakeIngredients(std::vector<Ingredient*, std::allocator<Ingredient*> >)"

"ComplexRecipe::mergeRemovals(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+=(int)"
"Ingredient** std::__copy_move_backward_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"void std::__advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, int>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, int, std::random_access_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_backward_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::move_iterator<Ingredient**> std::make_move_iterator<Ingredient**>(Ingredient**)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"void std::advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, unsigned>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::move_backward<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_move_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_insert<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::forward_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_insert_dispatch<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::__false_type)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator<Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, __gnu_cxx::__enable_if<std::__are_same<Ingredient**, Ingredient**>::__value, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__type> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::vector<Ingredient*, std::allocator<Ingredient*> >::insert<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, void>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"ComplexRecipe::canMake(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+=(int)"
"Ingredient** std::__copy_move_backward_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"void std::__advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, int>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, int, std::random_access_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_backward_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::move_iterator<Ingredient**> std::make_move_iterator<Ingredient**>(Ingredient**)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"void std::advance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, unsigned>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::move_backward<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_move_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_insert<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::forward_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"void std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_insert_dispatch<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::__false_type)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator<Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, __gnu_cxx::__enable_if<std::__are_same<Ingredient**, Ingredient**>::__value, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__type> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::vector<Ingredient*, std::allocator<Ingredient*> >::insert<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, void>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"ComplexRecipe::mergeRemovals(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::canMakeIngredients(std::vector<Ingredient*, std::allocator<Ingredient*> >)"

"ComplexRecipe::make()"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::makeIngredients()"
"Recipe::canMakeIngredients()"

"ComplexRecipe::canMake()"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::canMakeIngredients()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"ComplexRecipe::getRawCost()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::subComponentCost()"

"ComplexRecipe::~ComplexRecipe()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"ComplexRecipe::~ComplexRecipe()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Recipe::~Recipe()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"

"ComplexRecipe::~ComplexRecipe()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Recipe::~Recipe()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"

"ComplexRecipe::ComplexRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, Recipe*, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::~Recipe()"
"Recipe::Recipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"

"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"std::move_iterator<Food**>::base() const"

"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::move_iterator<Food**>::base() const"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"

"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"

"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"

"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"

"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"

"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"

"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"

"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"operator new(unsigned, void*)"

"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"

"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"

"std::allocator<Ingredient*>::allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"

"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"operator new(unsigned, void*)"

"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"

"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"

"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"operator new(unsigned, void*)"

"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"

"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"operator new(unsigned, void*)"

"void std::_Destroy<Food**>(Food**, Food**)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"

"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::~allocator()"

"std::allocator<Food*>::~allocator()"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"

"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"

"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"

"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::~allocator()"

"std::allocator<Ingredient*>::~allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"

"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"void std::_Destroy<Food**>(Food**, Food**)"

"std::vector<Food*, std::allocator<Food*> >::~vector()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"

"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::vector<Food*, std::allocator<Food*> >::begin() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"

"std::vector<Food*, std::allocator<Food*> >::end() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"

"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"

"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"

"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"

"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"

"Recipe::getSubComponents()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"_ZNSt6vectorIP4FoodSaIS1_EE9push_backEOS1_"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"_ZSt4moveIRP4FoodEONSt16remove_referenceIT_E4typeEOS4_"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"operator new(unsigned, void*)"

"Recipe::updateReferences(std::vector<Food*, std::allocator<Food*> >)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"_ZSt4moveIRP4FoodEONSt16remove_referenceIT_E4typeEOS4_"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"_ZNSt6vectorIP4FoodSaIS1_EE9push_backEOS1_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP4FoodEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::vector<Food*, std::allocator<Food*> >::operator[](unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_range_check(unsigned) const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::push_back(Food* const&)"
"Food::addReferences(std::vector<Food*, std::allocator<Food*> >)"
"std::vector<Food*, std::allocator<Food*> >::at(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"operator new(unsigned, void*)"

"Recipe::findIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Recipe::containsIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Recipe::findIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Recipe::getIngredients()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"_ZN6Recipe12printDetailsB5cxx11Ev"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::_Setfill<char> std::setfill<char>(char)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"_ZN6Recipe15printNameStatusB5cxx11Ev"
"std::setprecision(int)"
"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::vector<Food*, std::allocator<Food*> >::operator[](unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_range_check(unsigned) const"
"std::vector<Food*, std::allocator<Food*> >::at(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"_ZN4Food15printReferencesB5cxx11Ev"

"_ZN6Recipe15printNameStatusB5cxx11Ev"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::_Setfill<char> std::setfill<char>(char)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::setprecision(int)"
"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"_ZN6Recipe5printB5cxx11Ev"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::_Setfill<char> std::setfill<char>(char)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZN6Recipe15printNameStatusB5cxx11Ev"
"std::setprecision(int)"
"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"Recipe::makeIngredients(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::canMakeIngredients(std::vector<Ingredient*, std::allocator<Ingredient*> >)"

"Recipe::make(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::makeIngredients(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Recipe::canMakeIngredients(std::vector<Ingredient*, std::allocator<Ingredient*> >)"

"Recipe::canMakeIngredients(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Recipe::canMake(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::canMakeIngredients(std::vector<Ingredient*, std::allocator<Ingredient*> >)"

"Recipe::makeIngredients()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::canMakeIngredients()"

"Recipe::make()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::makeIngredients()"
"Recipe::canMakeIngredients()"

"Recipe::canMakeIngredients()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Recipe::canMake()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::canMakeIngredients()"

"Recipe::getRawCost()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::subComponentCost()"

"Recipe::subComponentCost()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Recipe::getTotalCost()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::subComponentCost()"

"Recipe::~Recipe()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Recipe::~Recipe()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"

"Recipe::~Recipe()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"

"Recipe::Recipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"

"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"

"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"std::move_iterator<Recipe**>::base() const"

"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"

"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"std::move_iterator<Recipe**>::base() const"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"

"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::move_iterator<Ingredient**>::base() const"

"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"

"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"

"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"operator new(unsigned, void*)"

"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"

"Recipe** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"

"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"

"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"

"Recipe** std::uninitialized_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Recipe** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"

"__gnu_cxx::new_allocator<Recipe*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"

"std::allocator_traits<std::allocator<Recipe*> >::max_size(std::allocator<Recipe*> const&)"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"

"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"

"unsigned std::__detail::__mod<unsigned, 2147483647, 16807, 0>(unsigned)"
"std::__detail::_Mod<unsigned, 2147483647, 16807, 0, false, true>::__calc(unsigned)"

"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"operator new(unsigned, void*)"

"Recipe** std::__uninitialized_copy_a<std::move_iterator<Recipe**>, Recipe**, Recipe*>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**, std::allocator<Recipe*>&)"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Recipe** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Recipe** std::uninitialized_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"

"std::move_iterator<Recipe**> std::__make_move_if_noexcept_iterator<Recipe**, std::move_iterator<Recipe**> >(Recipe**)"
"std::move_iterator<Recipe**>::move_iterator(Recipe**)"

"std::allocator_traits<std::allocator<Recipe*> >::allocate(std::allocator<Recipe*>&, unsigned)"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"
"__gnu_cxx::new_allocator<Recipe*>::allocate(unsigned, void const*)"

"std::vector<Recipe*, std::allocator<Recipe*> >::max_size() const"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"
"std::allocator_traits<std::allocator<Recipe*> >::max_size(std::allocator<Recipe*> const&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator() const"

"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_JS2_EEEvPT_DpOT0_"
"_ZSt7forwardIP6RecipeEOT_RNSt16remove_referenceIS2_E4typeE"
"operator new(unsigned, void*)"

"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"

"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"

"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"

"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"

"std::allocator<Ingredient*>::allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::operator()()"
"std::__detail::_Mod<unsigned, 2147483647, 16807, 0, false, true>::__calc(unsigned)"
"unsigned std::__detail::__mod<unsigned, 2147483647, 16807, 0>(unsigned)"

"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"operator new(unsigned, void*)"

"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"

"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"

"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::new_allocator()"

"std::allocator<Recipe*>::allocator()"
"__gnu_cxx::new_allocator<Recipe*>::new_allocator()"

"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Recipe** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"std::move_iterator<Recipe**>::move_iterator(Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"
"Recipe** std::uninitialized_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Recipe*> >::max_size(std::allocator<Recipe*> const&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator() const"
"void __gnu_cxx::new_allocator<Recipe*>::destroy<Recipe*>(Recipe**)"
"Recipe** std::__uninitialized_copy_a<std::move_iterator<Recipe**>, Recipe**, Recipe*>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**, std::allocator<Recipe*>&)"
"std::move_iterator<Recipe**> std::__make_move_if_noexcept_iterator<Recipe**, std::move_iterator<Recipe**> >(Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::allocate(std::allocator<Recipe*>&, unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_JS2_EEEvPT_DpOT0_"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"
"void std::allocator_traits<std::allocator<Recipe*> >::destroy<Recipe*>(std::allocator<Recipe*>&, Recipe**)"
"Recipe** std::__uninitialized_move_if_noexcept_a<Recipe**, Recipe**, std::allocator<Recipe*> >(Recipe**, Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_allocate(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"void std::_Destroy_aux<true>::__destroy<Recipe**>(Recipe**, Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"
"_ZSt7forwardIP6RecipeEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Recipe**>(Recipe**, Recipe**)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_deallocate(Recipe**, unsigned)"
"void std::_Destroy<Recipe**, Recipe*>(Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator()"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"operator new(unsigned, void*)"

"void std::allocator_traits<std::allocator<Recipe*> >::destroy<Recipe*>(std::allocator<Recipe*>&, Recipe**)"
"void __gnu_cxx::new_allocator<Recipe*>::destroy<Recipe*>(Recipe**)"

"Recipe** std::__uninitialized_move_if_noexcept_a<Recipe**, Recipe**, std::allocator<Recipe*> >(Recipe**, Recipe**, Recipe**, std::allocator<Recipe*>&)"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Recipe** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"std::move_iterator<Recipe**>::move_iterator(Recipe**)"
"Recipe** std::uninitialized_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Recipe** std::__uninitialized_copy_a<std::move_iterator<Recipe**>, Recipe**, Recipe*>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**, std::allocator<Recipe*>&)"
"std::move_iterator<Recipe**> std::__make_move_if_noexcept_iterator<Recipe**, std::move_iterator<Recipe**> >(Recipe**)"

"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"
"__gnu_cxx::new_allocator<Recipe*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Recipe*> >::allocate(std::allocator<Recipe*>&, unsigned)"

"std::vector<Recipe*, std::allocator<Recipe*> >::_M_check_len(unsigned, char const*) const"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"
"std::allocator_traits<std::allocator<Recipe*> >::max_size(std::allocator<Recipe*> const&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator() const"
"std::vector<Recipe*, std::allocator<Recipe*> >::max_size() const"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"

"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_JS2_EEEvPT_DpOT0_"
"_ZSt7forwardIP6RecipeEOT_RNSt16remove_referenceIS2_E4typeE"
"operator new(unsigned, void*)"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"

"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"

"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"

"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"

"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"operator new(unsigned, void*)"

"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>, std::random_access_iterator_tag)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const"
"bool __gnu_cxx::__ops::_Iter_equals_val<char const>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"

"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"

"std::allocator<Sandwich*>::~allocator()"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"

"bool __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::operator()<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator*() const"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"

"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"

"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&, std::uniform_int_distribution<int>::param_type const&)"
"std::__detail::_Mod<unsigned, 2147483647, 16807, 0, false, true>::__calc(unsigned)"
"unsigned std::__detail::__mod<unsigned, 2147483647, 16807, 0>(unsigned)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::operator()()"
"std::uniform_int_distribution<int>::param_type::a() const"
"std::uniform_int_distribution<int>::param_type::b() const"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&, std::uniform_int_distribution<int>::param_type const&)"
"std::uniform_int_distribution<int>::param_type::param_type(int, int)"

"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIIEEEEOT_S8_RT0_"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIJEEEEOT_S8_RT0_"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"

"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"operator new(unsigned, void*)"

"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"

"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"

"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const"

"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_IRKS6_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_"
"_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE"
"operator delete(void*, void*)"
"operator new(unsigned, void*)"

"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::new_allocator()"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()"

"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"

"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"

"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~new_allocator()"

"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_impl::_Vector_impl()"
"__gnu_cxx::new_allocator<Recipe*>::new_allocator()"
"std::allocator<Recipe*>::allocator()"

"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"

"std::allocator<Recipe*>::~allocator()"
"__gnu_cxx::new_allocator<Recipe*>::~new_allocator()"

"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Recipe** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"std::move_iterator<Recipe**>::move_iterator(Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"
"Recipe** std::uninitialized_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Recipe*> >::max_size(std::allocator<Recipe*> const&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator() const"
"void __gnu_cxx::new_allocator<Recipe*>::destroy<Recipe*>(Recipe**)"
"Recipe** std::__uninitialized_copy_a<std::move_iterator<Recipe**>, Recipe**, Recipe*>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**, std::allocator<Recipe*>&)"
"std::move_iterator<Recipe**> std::__make_move_if_noexcept_iterator<Recipe**, std::move_iterator<Recipe**> >(Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::allocate(std::allocator<Recipe*>&, unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_JS2_EEEvPT_DpOT0_"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Recipe*> >::destroy<Recipe*>(std::allocator<Recipe*>&, Recipe**)"
"Recipe** std::__uninitialized_move_if_noexcept_a<Recipe**, Recipe**, std::allocator<Recipe*> >(Recipe**, Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_allocate(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"void std::_Destroy_aux<true>::__destroy<Recipe**>(Recipe**, Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"
"_ZSt7forwardIP6RecipeEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Recipe**>(Recipe**, Recipe**)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_deallocate(Recipe**, unsigned)"
"void std::_Destroy<Recipe**, Recipe*>(Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator()"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"operator new(unsigned, void*)"

"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"

"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"

"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"

"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"operator new(unsigned, void*)"

"bool __gnu_cxx::__ops::_Iter_equals_val<char const>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const"

"bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"

"bool __gnu_cxx::operator==<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"

"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const"
"bool __gnu_cxx::__ops::_Iter_equals_val<char const>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"

"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"

"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::allocator<Sandwich*>::~allocator()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::~allocator()"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>, std::random_access_iterator_tag)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator*() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator++()"
"bool __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::operator()<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::~allocator()"

"std::allocator<Ingredient*>::~allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"

"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiIEILj0EEEET_OSt5tupleIIDpT0_EESt12_Index_tupleIIXspT1_EEE"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiJEJLj0EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE"
"std::__detail::_Mod<unsigned, 2147483647, 16807, 0, false, true>::__calc(unsigned)"
"unsigned std::__detail::__mod<unsigned, 2147483647, 16807, 0>(unsigned)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::operator()()"
"std::uniform_int_distribution<int>::param_type::a() const"
"std::uniform_int_distribution<int>::param_type::b() const"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&, std::uniform_int_distribution<int>::param_type const&)"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIIEEEEOT_S8_RT0_"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIJEEEEOT_S8_RT0_"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&)"
"_ZSt3getILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIIDpT0_EEE4typeERS6_"
"_ZSt3getILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEIEERT0_RSt11_Tuple_implIXT_EIS2_DpT1_EE"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE"
"std::uniform_int_distribution<int>::param_type::param_type(int, int)"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>::_M_head(std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>&)"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"

"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&)"
"std::__detail::_Mod<unsigned, 2147483647, 16807, 0, false, true>::__calc(unsigned)"
"unsigned std::__detail::__mod<unsigned, 2147483647, 16807, 0>(unsigned)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::operator()()"
"std::uniform_int_distribution<int>::param_type::a() const"
"std::uniform_int_distribution<int>::param_type::b() const"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&, std::uniform_int_distribution<int>::param_type const&)"
"std::uniform_int_distribution<int>::param_type::param_type(int, int)"

"_ZSt3getILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIIDpT0_EEE4typeERS6_"
"_ZSt3getILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEIEERT0_RSt11_Tuple_implIXT_EIS2_DpT1_EE"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>::_M_head(std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>&)"

"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEIEERT0_RSt11_Tuple_implIXT_EIS2_DpT1_EE"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>::_M_head(std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>&)"

"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIIRKS5_EEEvDpOT_"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"void __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_IRKS6_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_IRKS5_EEEvRS6_PT_DpOT0_"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_"
"_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"
"operator delete(void*, void*)"
"operator new(unsigned, void*)"

"void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"void __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"

"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"operator new(unsigned, void*)"

"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned)"

"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned, char const*) const"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"

"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_IRKS5_EEEvRS6_PT_DpOT0_"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_IRKS6_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_"
"_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE"
"operator delete(void*, void*)"
"operator new(unsigned, void*)"

"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base()"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::new_allocator()"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()"

"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"

"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~_Vector_base()"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~new_allocator()"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::~_Vector_impl()"

"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"

"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~new_allocator()"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()"

"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_base()"
"__gnu_cxx::new_allocator<Recipe*>::new_allocator()"
"std::allocator<Recipe*>::allocator()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_impl::_Vector_impl()"

"void std::_Destroy<Recipe**>(Recipe**, Recipe**)"
"void std::_Destroy_aux<true>::__destroy<Recipe**>(Recipe**, Recipe**)"

"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"
"__gnu_cxx::new_allocator<Recipe*>::~new_allocator()"
"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"
"std::allocator<Recipe*>::~allocator()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_deallocate(Recipe**, unsigned)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_impl::~_Vector_impl()"

"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_deallocate(Recipe**, unsigned)"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"
"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"

"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Recipe*>::~new_allocator()"
"std::allocator<Recipe*>::~allocator()"

"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IIRS3_EEERKS1_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IIRS3_EEERKS1_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IJRS3_EEERKS1_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IJRS3_EEERKS1_DpOT_"
"_ZNSt5tupleIISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IIRS1_EvEEDpOT_"
"_ZNSt5tupleIJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IJRS1_EvEEDpOT_"
"_ZNSt5tupleIISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IIRS1_EvEEDpOT_"
"_ZNSt5tupleIJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IJRS1_EvEEDpOT_"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC1IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC2IRS1_EEOT_"
"std::_Weak_result_type<std::uniform_int_distribution<int> >::_Weak_result_type()"
"std::_Weak_result_type_impl<std::uniform_int_distribution<int> >::_Weak_result_type_impl()"
"std::_Maybe_get_result_type<std::uniform_int_distribution<int>, void>::_Maybe_get_result_type()"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"

"_ZNSt5tupleIISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IIRS1_EvEEDpOT_"
"_ZNSt5tupleIJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IJRS1_EvEEDpOT_"
"_ZNSt5tupleIISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IIRS1_EvEEDpOT_"
"_ZNSt5tupleIJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IJRS1_EvEEDpOT_"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC1IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC2IRS1_EEOT_"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"

"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC1IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC2IRS1_EEOT_"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"

"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC1IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC2IRS1_EEOT_"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"

"unsigned std::__detail::__mod<unsigned, 2147483647, 1, 0>(unsigned)"
"std::__detail::_Mod<unsigned, 2147483647, 1, 0, true, true>::__calc(unsigned)"

"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"

"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator<char*>(__gnu_cxx::__normal_iterator<char*, __gnu_cxx::__enable_if<std::__are_same<char*, char*>::__value, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__type> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"

"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const"
"bool __gnu_cxx::__ops::_Iter_equals_val<char const>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"
"bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()"
"bool __gnu_cxx::operator==<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"

"__gnu_cxx::__ops::_Iter_equals_val<char const> __gnu_cxx::__ops::__iter_equals_val<char const>(char const&)"
"__gnu_cxx::__ops::_Iter_equals_val<char const>::_Iter_equals_val(char const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"

"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"

"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::allocator<Sandwich*>::~allocator()"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator*() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator++()"
"bool __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::operator()<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> __gnu_cxx::__ops::__iter_equals_val<Ingredient* const>(Ingredient* const&)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::_Iter_equals_val(Ingredient* const&)"

"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEclIIEiEET0_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEclIJEiEET0_DpOT_"
"std::__detail::_Mod<unsigned, 2147483647, 16807, 0, false, true>::__calc(unsigned)"
"unsigned std::__detail::__mod<unsigned, 2147483647, 16807, 0>(unsigned)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::operator()()"
"std::uniform_int_distribution<int>::param_type::a() const"
"std::uniform_int_distribution<int>::param_type::b() const"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&, std::uniform_int_distribution<int>::param_type const&)"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIIEEEEOT_S8_RT0_"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIJEEEEOT_S8_RT0_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiIEILj0EEEET_OSt5tupleIIDpT0_EESt12_Index_tupleIIXspT1_EEE"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiJEJLj0EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&)"
"_ZSt3getILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIIDpT0_EEE4typeERS6_"
"_ZSt3getILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEIEERT0_RSt11_Tuple_implIXT_EIS2_DpT1_EE"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE"
"_ZSt16forward_as_tupleIIEESt5tupleIIDpOT_EES3_"
"_ZSt16forward_as_tupleIJEESt5tupleIJDpOT_EES3_"
"std::uniform_int_distribution<int>::param_type::param_type(int, int)"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>::_M_head(std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>&)"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"

"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector()"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::new_allocator()"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base()"

"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_check(unsigned) const"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"

"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"

"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~new_allocator()"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~_Vector_base()"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator()"

"std::vector<Recipe*, std::allocator<Recipe*> >::vector()"
"__gnu_cxx::new_allocator<Recipe*>::new_allocator()"
"std::allocator<Recipe*>::allocator()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_base()"

"void std::_Destroy<Recipe**, Recipe*>(Recipe**, Recipe**, std::allocator<Recipe*>&)"
"void std::_Destroy_aux<true>::__destroy<Recipe**>(Recipe**, Recipe**)"
"void std::_Destroy<Recipe**>(Recipe**, Recipe**)"

"std::vector<Recipe*, std::allocator<Recipe*> >::~vector()"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"
"__gnu_cxx::new_allocator<Recipe*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Recipe**>(Recipe**, Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"
"std::allocator<Recipe*>::~allocator()"
"void std::_Destroy<Recipe**>(Recipe**, Recipe**)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::~_Vector_base()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_deallocate(Recipe**, unsigned)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Recipe**, Recipe*>(Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator()"

"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"

"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>::_M_head(std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>&)"

"std::_Weak_result_type<std::uniform_int_distribution<int> >::_Weak_result_type()"
"std::_Weak_result_type_impl<std::uniform_int_distribution<int> >::_Weak_result_type_impl()"
"std::_Maybe_get_result_type<std::uniform_int_distribution<int>, void>::_Maybe_get_result_type()"

"std::_Weak_result_type_impl<std::uniform_int_distribution<int> >::_Weak_result_type_impl()"
"std::_Maybe_get_result_type<std::uniform_int_distribution<int>, void>::_Maybe_get_result_type()"

"_ZSt4bindIRSt24uniform_int_distributionIiEIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEENSt12_Bind_helperIXsrSt5__or_IISt11is_integralINSt5decayIT_E4typeEESt7is_enumISC_EEE5valueESA_IDpT0_EE4typeEOSA_DpOSH_"
"_ZSt4bindIRSt24uniform_int_distributionIiEJRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEENSt12_Bind_helperIXsrSt5__or_IJSt11is_integralINSt5decayIT_E4typeEESt7is_enumISC_EEE5valueESA_JDpT0_EE4typeEOSA_DpOSH_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IIRS3_EEERKS1_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IIRS3_EEERKS1_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IJRS3_EEERKS1_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IJRS3_EEERKS1_DpOT_"
"_ZNSt5tupleIISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IIRS1_EvEEDpOT_"
"_ZNSt5tupleIJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IJRS1_EvEEDpOT_"
"_ZNSt5tupleIISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IIRS1_EvEEDpOT_"
"_ZNSt5tupleIJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IJRS1_EvEEDpOT_"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC1IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC2IRS1_EEOT_"
"std::_Weak_result_type<std::uniform_int_distribution<int> >::_Weak_result_type()"
"std::_Weak_result_type_impl<std::uniform_int_distribution<int> >::_Weak_result_type_impl()"
"std::_Maybe_get_result_type<std::uniform_int_distribution<int>, void>::_Maybe_get_result_type()"
"std::_Maybe_wrap_member_pointer<std::uniform_int_distribution<int> >::__do_wrap(std::uniform_int_distribution<int> const&)"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"
"_ZSt7forwardIRSt24uniform_int_distributionIiEEOT_RNSt16remove_referenceIS3_E4typeE"

"std::uniform_int_distribution<int>::uniform_int_distribution(int, int)"
"std::uniform_int_distribution<int>::param_type::param_type(int, int)"

"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::linear_congruential_engine(unsigned)"
"std::__detail::_Mod<unsigned, 2147483647, 1, 0, true, true>::__calc(unsigned)"
"unsigned std::__detail::__mod<unsigned, 2147483647, 1, 0>(unsigned)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::seed(unsigned)"

"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::seed(unsigned)"
"std::__detail::_Mod<unsigned, 2147483647, 1, 0, true, true>::__calc(unsigned)"
"unsigned std::__detail::__mod<unsigned, 2147483647, 1, 0>(unsigned)"

"_ZNSt6vectorIP6RecipeSaIS1_EE9push_backEOS1_"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Recipe** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"std::move_iterator<Recipe**>::move_iterator(Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"
"Recipe** std::uninitialized_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Recipe*> >::max_size(std::allocator<Recipe*> const&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator() const"
"void __gnu_cxx::new_allocator<Recipe*>::destroy<Recipe*>(Recipe**)"
"Recipe** std::__uninitialized_copy_a<std::move_iterator<Recipe**>, Recipe**, Recipe*>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**, std::allocator<Recipe*>&)"
"std::move_iterator<Recipe**> std::__make_move_if_noexcept_iterator<Recipe**, std::move_iterator<Recipe**> >(Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::allocate(std::allocator<Recipe*>&, unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_JS2_EEEvPT_DpOT0_"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Recipe*> >::destroy<Recipe*>(std::allocator<Recipe*>&, Recipe**)"
"Recipe** std::__uninitialized_move_if_noexcept_a<Recipe**, Recipe**, std::allocator<Recipe*> >(Recipe**, Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_allocate(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"void std::_Destroy_aux<true>::__destroy<Recipe**>(Recipe**, Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"_ZSt7forwardIP6RecipeEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Recipe**>(Recipe**, Recipe**)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_deallocate(Recipe**, unsigned)"
"_ZSt4moveIRP6RecipeEONSt16remove_referenceIT_E4typeEOS4_"
"void std::_Destroy<Recipe**, Recipe*>(Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator()"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"operator new(unsigned, void*)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"

"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::remove<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char>(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__ops::_Iter_equals_val<char const>::_Iter_equals_val(char const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const"
"bool __gnu_cxx::__ops::_Iter_equals_val<char const>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"
"bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()"
"bool __gnu_cxx::operator==<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"__gnu_cxx::__ops::_Iter_equals_val<char const> __gnu_cxx::__ops::__iter_equals_val<char const>(char const&)"

"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"bool __gnu_cxx::operator==<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::find<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient* const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator*() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator++()"
"bool __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::operator()<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::_Iter_equals_val(Ingredient* const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> __gnu_cxx::__ops::__iter_equals_val<Ingredient* const>(Ingredient* const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"SandwichBar::generateRandSandwich()"
"std::__detail::_Mod<unsigned, 2147483647, 16807, 0, false, true>::__calc(unsigned)"
"unsigned std::__detail::__mod<unsigned, 2147483647, 16807, 0>(unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator*() const"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::operator()()"
"std::uniform_int_distribution<int>::param_type::a() const"
"std::uniform_int_distribution<int>::param_type::b() const"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator++()"
"bool __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::operator()<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::_Iter_equals_val(Ingredient* const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&, std::uniform_int_distribution<int>::param_type const&)"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIIEEEEOT_S8_RT0_"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIJEEEEOT_S8_RT0_"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiIEILj0EEEET_OSt5tupleIIDpT0_EESt12_Index_tupleIIXspT1_EEE"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiJEJLj0EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&)"
"_ZSt3getILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIIDpT0_EEE4typeERS6_"
"_ZSt3getILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEIEERT0_RSt11_Tuple_implIXT_EIS2_DpT1_EE"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE"
"_ZSt16forward_as_tupleIIEESt5tupleIIDpOT_EES3_"
"_ZSt16forward_as_tupleIJEESt5tupleIJDpOT_EES3_"
"std::uniform_int_distribution<int>::param_type::param_type(int, int)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> __gnu_cxx::__ops::__iter_equals_val<Ingredient* const>(Ingredient* const&)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEclIIEiEET0_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEclIJEiEET0_DpOT_"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>::_M_head(std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>&)"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"
"std::uniform_int_distribution<int>::uniform_int_distribution(int, int)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"bool __gnu_cxx::operator==<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::find<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient* const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"Sandwich::Sandwich(Recipe*, Substitution*)"
"Sandwich::Sandwich(Recipe*)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Substitution::getRemovals()"
"Substitution::getAdditions()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Substitution::addRemoval(Ingredient*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Substitution::addAddition(Ingredient*)"
"Substitution::Substitution()"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"operator new(unsigned, void*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::getRandomIngredient()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"void __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_IRKS6_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIIRKS5_EEEvDpOT_"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_"
"void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_IRKS5_EEEvRS6_PT_DpOT0_"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_"
"_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"
"operator delete(void*, void*)"
"operator new(unsigned, void*)"

"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::at(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[](unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_check(unsigned) const"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"

"SandwichBar::tokenize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::new_allocator()"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"void __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_IRKS6_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIIRKS5_EEEvDpOT_"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_"
"void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_IRKS5_EEEvRS6_PT_DpOT0_"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_"
"_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"
"operator delete(void*, void*)"
"operator new(unsigned, void*)"

"SandwichBar::addIngredientLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::new_allocator()"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const)"
"std::allocator<Ingredient*>::allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~new_allocator()"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__ops::_Iter_equals_val<char const>::_Iter_equals_val(char const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_IRKS6_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const"
"bool __gnu_cxx::__ops::_Iter_equals_val<char const>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"
"bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()"
"bool __gnu_cxx::operator==<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIIRKS5_EEEvDpOT_"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_"
"void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_IRKS5_EEEvRS6_PT_DpOT0_"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_"
"_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~_Vector_base()"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::~_Vector_impl()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"
"__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator<char*>(__gnu_cxx::__normal_iterator<char*, __gnu_cxx::__enable_if<std::__are_same<char*, char*>::__value, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__type> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"__gnu_cxx::__ops::_Iter_equals_val<char const> __gnu_cxx::__ops::__iter_equals_val<char const>(char const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[](unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_check(unsigned) const"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()"
"_ZN9__gnu_cxx6__stoaIffcIEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIlicIiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::remove<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char>(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::at(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"
"SandwichBar::tokenize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::__cxx11::stof(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*)"
"std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*, int)"
"operator delete(void*, void*)"
"operator new(unsigned, void*)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"
"SimpleIngredient::SimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::getIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::addComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Inventory::addSimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"
"Ingredient::Ingredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Ingredient::~Ingredient()"
"ComplexIngredient::ComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"

"SandwichBar::addRecipeLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"ComplexRecipe::ComplexRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, Recipe*, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::~Recipe()"
"Recipe::Recipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"Recipe** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"std::move_iterator<Recipe**>::move_iterator(Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"Recipe** std::uninitialized_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Recipe*> >::max_size(std::allocator<Recipe*> const&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::new_allocator()"
"void __gnu_cxx::new_allocator<Recipe*>::destroy<Recipe*>(Recipe**)"
"Recipe** std::__uninitialized_copy_a<std::move_iterator<Recipe**>, Recipe**, Recipe*>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**, std::allocator<Recipe*>&)"
"std::move_iterator<Recipe**> std::__make_move_if_noexcept_iterator<Recipe**, std::move_iterator<Recipe**> >(Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::allocate(std::allocator<Recipe*>&, unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_JS2_EEEvPT_DpOT0_"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const)"
"std::allocator<Ingredient*>::allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~new_allocator()"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Recipe*> >::destroy<Recipe*>(std::allocator<Recipe*>&, Recipe**)"
"Recipe** std::__uninitialized_move_if_noexcept_a<Recipe**, Recipe**, std::allocator<Recipe*> >(Recipe**, Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_allocate(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__ops::_Iter_equals_val<char const>::_Iter_equals_val(char const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_IRKS6_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()"
"void std::_Destroy_aux<true>::__destroy<Recipe**>(Recipe**, Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"_ZSt7forwardIP6RecipeEOT_RNSt16remove_referenceIS2_E4typeE"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const"
"bool __gnu_cxx::__ops::_Iter_equals_val<char const>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"
"bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()"
"bool __gnu_cxx::operator==<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIIRKS5_EEEvDpOT_"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_"
"void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_IRKS5_EEEvRS6_PT_DpOT0_"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_"
"_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~_Vector_base()"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Recipe**>(Recipe**, Recipe**)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_deallocate(Recipe**, unsigned)"
"_ZSt4moveIRP6RecipeEONSt16remove_referenceIT_E4typeEOS4_"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"
"__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator<char*>(__gnu_cxx::__normal_iterator<char*, __gnu_cxx::__enable_if<std::__are_same<char*, char*>::__value, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__type> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"__gnu_cxx::__ops::_Iter_equals_val<char const> __gnu_cxx::__ops::__iter_equals_val<char const>(char const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[](unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_check(unsigned) const"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()"
"void std::_Destroy<Recipe**, Recipe*>(Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator()"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"_ZN9__gnu_cxx6__stoaIffcIEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZNSt6vectorIP6RecipeSaIS1_EE9push_backEOS1_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::remove<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char>(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::at(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"
"SandwichBar::tokenize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"SandwichBar::findRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"std::__cxx11::stof(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*)"
"operator delete(void*, void*)"
"operator new(unsigned, void*)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::getIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"SandwichBar::findRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::char_traits<char>::length(char const*)"

"SandwichBar::orderMore(Order*)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Recipe::getIngredients()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::~Recipe()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::allocator<Sandwich*>::~allocator()"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Sandwich::getSubstitution()"
"Substitution::Substitution(Substitution const&)"
"Sandwich::hasSubstitution()"
"Sandwich::getRecipe()"
"Recipe::Recipe(Recipe const&)"
"Food::Food(Food const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Sandwich** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<false, Sandwich* const*, Sandwich**>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"Sandwich** std::copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich* const* const&)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"Sandwich** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(unsigned, std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Sandwich*> >::select_on_container_copy_construction(std::allocator<Sandwich*> const&)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"Sandwich** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, Sandwich*>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, std::allocator<Sandwich*>&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::begin() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Sandwich*> >::_S_select_on_copy(std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::vector<Sandwich*, std::allocator<Sandwich*> > const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"Order::getSandwiches()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Substitution::getAdditions()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Substitution::~Substitution()"
"Substitution::Substitution()"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"

"SandwichBar::generateRandOrder()"
"std::__detail::_Mod<unsigned, 2147483647, 16807, 0, false, true>::__calc(unsigned)"
"unsigned std::__detail::__mod<unsigned, 2147483647, 16807, 0>(unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator*() const"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::operator()()"
"std::uniform_int_distribution<int>::param_type::a() const"
"std::uniform_int_distribution<int>::param_type::b() const"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator++()"
"bool __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::operator()<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::_Iter_equals_val(Ingredient* const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&, std::uniform_int_distribution<int>::param_type const&)"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIIEEEEOT_S8_RT0_"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIJEEEEOT_S8_RT0_"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiIEILj0EEEET_OSt5tupleIIDpT0_EESt12_Index_tupleIIXspT1_EEE"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiJEJLj0EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&)"
"_ZSt3getILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIIDpT0_EEE4typeERS6_"
"_ZSt3getILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEIEERT0_RSt11_Tuple_implIXT_EIS2_DpT1_EE"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE"
"_ZSt16forward_as_tupleIIEESt5tupleIIDpOT_EES3_"
"_ZSt16forward_as_tupleIJEESt5tupleIJDpOT_EES3_"
"std::uniform_int_distribution<int>::param_type::param_type(int, int)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> __gnu_cxx::__ops::__iter_equals_val<Ingredient* const>(Ingredient* const&)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEclIIEiEET0_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEclIJEiEET0_DpOT_"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>::_M_head(std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>&)"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"
"std::uniform_int_distribution<int>::uniform_int_distribution(int, int)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"bool __gnu_cxx::operator==<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::find<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient* const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"SandwichBar::generateRandSandwich()"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"Sandwich::getTotalCost()"
"Sandwich::Sandwich(Recipe*, Substitution*)"
"Sandwich::Sandwich(Recipe*)"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"std::move_iterator<Sandwich**>::move_iterator(Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator()"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"Sandwich** std::uninitialized_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Sandwich*> >::max_size(std::allocator<Sandwich*> const&)"
"_ZSt4moveIRSaIP8SandwichEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP8SandwichEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"std::allocator<Sandwich*>::allocator()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"void __gnu_cxx::new_allocator<Sandwich*>::destroy<Sandwich*>(Sandwich**)"
"Sandwich** std::__uninitialized_copy_a<std::move_iterator<Sandwich**>, Sandwich**, Sandwich*>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**, std::allocator<Sandwich*>&)"
"std::move_iterator<Sandwich**> std::__make_move_if_noexcept_iterator<Sandwich**, std::move_iterator<Sandwich**> >(Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::__do_alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&, std::integral_constant<bool, true>)"
"void std::swap<Sandwich**>(Sandwich**&, Sandwich**&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::allocator<Sandwich*> const&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl()"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Sandwich*> >::destroy<Sandwich*>(std::allocator<Sandwich*>&, Sandwich**)"
"Sandwich** std::__uninitialized_move_if_noexcept_a<Sandwich**, Sandwich**, std::allocator<Sandwich*> >(Sandwich**, Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP8SandwichEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::__alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::get_allocator() const"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"_ZNSt6vectorIP8SandwichSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP8SandwichSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector()"
"Order::updateTotalCost()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::push_back(Sandwich* const&)"
"Order::addSandwich(Sandwich*)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"Order::Order(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"_ZNSt6vectorIP8SandwichSaIS1_EEaSEOS3_"
"operator new(unsigned, void*)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Substitution::getRemovals()"
"Substitution::getAdditions()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Substitution::getTotalRemoveCost()"
"Substitution::calculateCost(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Substitution::getTotalAddCost()"
"Substitution::addRemoval(Ingredient*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Substitution::addAddition(Ingredient*)"
"Substitution::Substitution()"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"operator new(unsigned, void*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::getRandomIngredient()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"SandwichBar::load()"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"ComplexRecipe::ComplexRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, Recipe*, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::~Recipe()"
"Recipe::Recipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"Recipe** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"std::move_iterator<Recipe**>::move_iterator(Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"Recipe** std::uninitialized_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Recipe*> >::max_size(std::allocator<Recipe*> const&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::new_allocator()"
"void __gnu_cxx::new_allocator<Recipe*>::destroy<Recipe*>(Recipe**)"
"Recipe** std::__uninitialized_copy_a<std::move_iterator<Recipe**>, Recipe**, Recipe*>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**, std::allocator<Recipe*>&)"
"std::move_iterator<Recipe**> std::__make_move_if_noexcept_iterator<Recipe**, std::move_iterator<Recipe**> >(Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::allocate(std::allocator<Recipe*>&, unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_JS2_EEEvPT_DpOT0_"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const)"
"std::allocator<Ingredient*>::allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~new_allocator()"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Recipe*> >::destroy<Recipe*>(std::allocator<Recipe*>&, Recipe**)"
"Recipe** std::__uninitialized_move_if_noexcept_a<Recipe**, Recipe**, std::allocator<Recipe*> >(Recipe**, Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_allocate(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__ops::_Iter_equals_val<char const>::_Iter_equals_val(char const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_IRKS6_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()"
"void std::_Destroy_aux<true>::__destroy<Recipe**>(Recipe**, Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"_ZSt7forwardIP6RecipeEOT_RNSt16remove_referenceIS2_E4typeE"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const"
"bool __gnu_cxx::__ops::_Iter_equals_val<char const>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"
"bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()"
"bool __gnu_cxx::operator==<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIIRKS5_EEEvDpOT_"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_"
"void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_IRKS5_EEEvRS6_PT_DpOT0_"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_"
"_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~_Vector_base()"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Recipe**>(Recipe**, Recipe**)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_deallocate(Recipe**, unsigned)"
"_ZSt4moveIRP6RecipeEONSt16remove_referenceIT_E4typeEOS4_"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"
"__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator<char*>(__gnu_cxx::__normal_iterator<char*, __gnu_cxx::__enable_if<std::__are_same<char*, char*>::__value, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__type> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"__gnu_cxx::__ops::_Iter_equals_val<char const> __gnu_cxx::__ops::__iter_equals_val<char const>(char const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[](unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_check(unsigned) const"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()"
"void std::_Destroy<Recipe**, Recipe*>(Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator()"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"_ZN9__gnu_cxx6__stoaIffcIEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIlicIiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZNSt6vectorIP6RecipeSaIS1_EE9push_backEOS1_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::remove<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char>(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::at(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"
"SandwichBar::tokenize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"SandwichBar::addIngredientLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"SandwichBar::addRecipeLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"SandwichBar::findRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"std::__cxx11::stof(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*)"
"std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*, int)"
"operator delete(void*, void*)"
"operator new(unsigned, void*)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"
"SimpleIngredient::SimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::getIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::addComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Inventory::addSimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"
"Ingredient::Ingredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Ingredient::~Ingredient()"
"ComplexIngredient::ComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"

"SandwichBar::printDetails()"
"std::_Setfill<char> std::setfill<char>(char)"
"std::setprecision(int)"
"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"SandwichBar::addIngredient()"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::new_allocator()"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const)"
"std::allocator<Ingredient*>::allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~new_allocator()"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__ops::_Iter_equals_val<char const>::_Iter_equals_val(char const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_IRKS6_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const"
"bool __gnu_cxx::__ops::_Iter_equals_val<char const>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"
"bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()"
"bool __gnu_cxx::operator==<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIIRKS5_EEEvDpOT_"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_"
"void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_IRKS5_EEEvRS6_PT_DpOT0_"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_"
"_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~_Vector_base()"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::~_Vector_impl()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"
"__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator<char*>(__gnu_cxx::__normal_iterator<char*, __gnu_cxx::__enable_if<std::__are_same<char*, char*>::__value, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__type> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"__gnu_cxx::__ops::_Iter_equals_val<char const> __gnu_cxx::__ops::__iter_equals_val<char const>(char const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[](unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_check(unsigned) const"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()"
"_ZN9__gnu_cxx6__stoaIffcIEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIlicIiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::remove<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char>(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::at(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"
"SandwichBar::tokenize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"SandwichBar::addIngredientLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::stof(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*)"
"std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*, int)"
"operator delete(void*, void*)"
"operator new(unsigned, void*)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"
"SimpleIngredient::SimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::getIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::addComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Inventory::addSimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"
"Ingredient::Ingredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Ingredient::~Ingredient()"
"ComplexIngredient::ComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"

"SandwichBar::addRecipe()"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"ComplexRecipe::ComplexRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, Recipe*, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::~Recipe()"
"Recipe::Recipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"Recipe** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"std::move_iterator<Recipe**>::move_iterator(Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"Recipe** std::uninitialized_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Recipe*> >::max_size(std::allocator<Recipe*> const&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::new_allocator()"
"void __gnu_cxx::new_allocator<Recipe*>::destroy<Recipe*>(Recipe**)"
"Recipe** std::__uninitialized_copy_a<std::move_iterator<Recipe**>, Recipe**, Recipe*>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**, std::allocator<Recipe*>&)"
"std::move_iterator<Recipe**> std::__make_move_if_noexcept_iterator<Recipe**, std::move_iterator<Recipe**> >(Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::allocate(std::allocator<Recipe*>&, unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_JS2_EEEvPT_DpOT0_"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const)"
"std::allocator<Ingredient*>::allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~new_allocator()"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Recipe*> >::destroy<Recipe*>(std::allocator<Recipe*>&, Recipe**)"
"Recipe** std::__uninitialized_move_if_noexcept_a<Recipe**, Recipe**, std::allocator<Recipe*> >(Recipe**, Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_allocate(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__ops::_Iter_equals_val<char const>::_Iter_equals_val(char const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_IRKS6_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()"
"void std::_Destroy_aux<true>::__destroy<Recipe**>(Recipe**, Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"_ZSt7forwardIP6RecipeEOT_RNSt16remove_referenceIS2_E4typeE"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const"
"bool __gnu_cxx::__ops::_Iter_equals_val<char const>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"
"bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()"
"bool __gnu_cxx::operator==<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIIRKS5_EEEvDpOT_"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_"
"void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_IRKS5_EEEvRS6_PT_DpOT0_"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_"
"_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~_Vector_base()"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Recipe**>(Recipe**, Recipe**)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_deallocate(Recipe**, unsigned)"
"_ZSt4moveIRP6RecipeEONSt16remove_referenceIT_E4typeEOS4_"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"
"__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator<char*>(__gnu_cxx::__normal_iterator<char*, __gnu_cxx::__enable_if<std::__are_same<char*, char*>::__value, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__type> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"__gnu_cxx::__ops::_Iter_equals_val<char const> __gnu_cxx::__ops::__iter_equals_val<char const>(char const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[](unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_check(unsigned) const"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()"
"void std::_Destroy<Recipe**, Recipe*>(Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator()"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"_ZN9__gnu_cxx6__stoaIffcIEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZNSt6vectorIP6RecipeSaIS1_EE9push_backEOS1_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::remove<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char>(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::at(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"
"SandwichBar::tokenize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"SandwichBar::addRecipeLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"SandwichBar::findRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"std::__cxx11::stof(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*)"
"operator delete(void*, void*)"
"operator new(unsigned, void*)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::getIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"SandwichBar::lookup()"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"SandwichBar::findRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::getIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"_ZN11SandwichBar10getRecipesB5cxx11Ev"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"

"SandwichBar::takeOrder()"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::_Setfill<char> std::setfill<char>(char)"
"SandwichBar::findRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"std::setprecision(int)"
"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::char_traits<char>::length(char const*)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Sandwich::getTotalCost()"
"Sandwich::make()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Sandwich::canMake()"
"Sandwich::~Sandwich()"
"Sandwich::Sandwich(Recipe*, Substitution*)"
"Sandwich::Sandwich(Recipe*)"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"std::move_iterator<Sandwich**>::move_iterator(Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator()"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"Sandwich** std::uninitialized_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Sandwich*> >::max_size(std::allocator<Sandwich*> const&)"
"_ZSt4moveIRSaIP8SandwichEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP8SandwichEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"std::allocator<Sandwich*>::allocator()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"void __gnu_cxx::new_allocator<Sandwich*>::destroy<Sandwich*>(Sandwich**)"
"Sandwich** std::__uninitialized_copy_a<std::move_iterator<Sandwich**>, Sandwich**, Sandwich*>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**, std::allocator<Sandwich*>&)"
"std::move_iterator<Sandwich**> std::__make_move_if_noexcept_iterator<Sandwich**, std::move_iterator<Sandwich**> >(Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::__do_alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&, std::integral_constant<bool, true>)"
"void std::swap<Sandwich**>(Sandwich**&, Sandwich**&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::allocator<Sandwich*> const&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl()"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Sandwich*> >::destroy<Sandwich*>(std::allocator<Sandwich*>&, Sandwich**)"
"Sandwich** std::__uninitialized_move_if_noexcept_a<Sandwich**, Sandwich**, std::allocator<Sandwich*> >(Sandwich**, Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP8SandwichEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::__alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::get_allocator() const"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"_ZNSt6vectorIP8SandwichSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP8SandwichSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector()"
"Order::getTotalCost()"
"Order::makeOrder()"
"Order::updateTotalCost()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::push_back(Sandwich* const&)"
"Order::addSandwich(Sandwich*)"
"Order::~Order()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"Order::Order(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"_ZNSt6vectorIP8SandwichSaIS1_EEaSEOS3_"
"operator new(unsigned, void*)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Substitution::getRemovals()"
"Substitution::getAdditions()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Substitution::getTotalRemoveCost()"
"Substitution::calculateCost(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Substitution::getTotalAddCost()"
"Substitution::addRemoval(Ingredient*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Substitution::addAddition(Ingredient*)"
"Substitution::~Substitution()"
"Substitution::Substitution()"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"operator new(unsigned, void*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::getIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"SandwichBar::simulate(int)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Recipe::getIngredients()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::~Recipe()"
"std::__detail::_Mod<unsigned, 2147483647, 16807, 0, false, true>::__calc(unsigned)"
"unsigned std::__detail::__mod<unsigned, 2147483647, 16807, 0>(unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator*() const"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::operator()()"
"std::uniform_int_distribution<int>::param_type::a() const"
"std::uniform_int_distribution<int>::param_type::b() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::allocator<Sandwich*>::~allocator()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator++()"
"bool __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::operator()<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::_Iter_equals_val(Ingredient* const&)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&, std::uniform_int_distribution<int>::param_type const&)"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIIEEEEOT_S8_RT0_"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIJEEEEOT_S8_RT0_"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiIEILj0EEEET_OSt5tupleIIDpT0_EESt12_Index_tupleIIXspT1_EEE"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiJEJLj0EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&)"
"_ZSt3getILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIIDpT0_EEE4typeERS6_"
"_ZSt3getILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEIEERT0_RSt11_Tuple_implIXT_EIS2_DpT1_EE"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE"
"_ZSt16forward_as_tupleIIEESt5tupleIIDpOT_EES3_"
"_ZSt16forward_as_tupleIJEESt5tupleIJDpOT_EES3_"
"std::uniform_int_distribution<int>::param_type::param_type(int, int)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> __gnu_cxx::__ops::__iter_equals_val<Ingredient* const>(Ingredient* const&)"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEclIIEiEET0_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEclIJEiEET0_DpOT_"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>::_M_head(std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>&)"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"
"std::uniform_int_distribution<int>::uniform_int_distribution(int, int)"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"bool __gnu_cxx::operator==<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::find<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient* const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"SandwichBar::generateRandSandwich()"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"
"SandwichBar::orderMore(Order*)"
"SandwichBar::generateRandOrder()"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZN8Sandwich5printB5cxx11Ev"
"Sandwich::getSubstitution()"
"Substitution::Substitution(Substitution const&)"
"Sandwich::hasSubstitution()"
"Sandwich::getRecipe()"
"Recipe::Recipe(Recipe const&)"
"Food::Food(Food const&)"
"Sandwich::getTotalCost()"
"Sandwich::make()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Sandwich::canMake()"
"Sandwich::~Sandwich()"
"Sandwich::Sandwich(Recipe*, Substitution*)"
"Sandwich::Sandwich(Recipe*)"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"Sandwich** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"Sandwich** std::__copy_move_a<false, Sandwich* const*, Sandwich**>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"std::move_iterator<Sandwich**>::move_iterator(Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator()"
"Sandwich** std::copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"Sandwich** std::uninitialized_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Sandwich*> >::max_size(std::allocator<Sandwich*> const&)"
"_ZSt4moveIRSaIP8SandwichEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP8SandwichEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"std::allocator<Sandwich*>::allocator()"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich* const* const&)"
"void __gnu_cxx::new_allocator<Sandwich*>::destroy<Sandwich*>(Sandwich**)"
"Sandwich** std::__uninitialized_copy_a<std::move_iterator<Sandwich**>, Sandwich**, Sandwich*>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**, std::allocator<Sandwich*>&)"
"std::move_iterator<Sandwich**> std::__make_move_if_noexcept_iterator<Sandwich**, std::move_iterator<Sandwich**> >(Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::__do_alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&, std::integral_constant<bool, true>)"
"void std::swap<Sandwich**>(Sandwich**&, Sandwich**&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::allocator<Sandwich*> const&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl()"
"Sandwich** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(unsigned, std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Sandwich*> >::select_on_container_copy_construction(std::allocator<Sandwich*> const&)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Sandwich*> >::destroy<Sandwich*>(std::allocator<Sandwich*>&, Sandwich**)"
"Sandwich** std::__uninitialized_move_if_noexcept_a<Sandwich**, Sandwich**, std::allocator<Sandwich*> >(Sandwich**, Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP8SandwichEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::__alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::get_allocator() const"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"Sandwich** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, Sandwich*>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, std::allocator<Sandwich*>&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::begin() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Sandwich*> >::_S_select_on_copy(std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::vector<Sandwich*, std::allocator<Sandwich*> > const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"_ZNSt6vectorIP8SandwichSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP8SandwichSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"
"_ZN5Order10printOrderB5cxx11Ev"
"Order::getSandwiches()"
"Order::getTotalCost()"
"Order::makeOrder()"
"Order::updateTotalCost()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::push_back(Sandwich* const&)"
"Order::addSandwich(Sandwich*)"
"Order::~Order()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"Order::Order(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"_ZNSt6vectorIP8SandwichSaIS1_EEaSEOS3_"
"operator new(unsigned, void*)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Substitution::getRemovals()"
"Substitution::getAdditions()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"_ZN12Substitution17printSubstitutionB5cxx11Ev"
"Substitution::getTotalRemoveCost()"
"Substitution::calculateCost(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Substitution::getTotalAddCost()"
"Substitution::addRemoval(Ingredient*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Substitution::addAddition(Ingredient*)"
"Substitution::~Substitution()"
"Substitution::Substitution()"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"operator new(unsigned, void*)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::getRandomIngredient()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"SandwichBar::handleCommands()"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"ComplexRecipe::ComplexRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, Recipe*, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Recipe::getIngredients()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::~Recipe()"
"Recipe::Recipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"Recipe** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"std::move_iterator<Recipe**>::move_iterator(Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::__detail::_Mod<unsigned, 2147483647, 16807, 0, false, true>::__calc(unsigned)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"Recipe** std::uninitialized_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Recipe*> >::max_size(std::allocator<Recipe*> const&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"unsigned std::__detail::__mod<unsigned, 2147483647, 16807, 0>(unsigned)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::new_allocator()"
"void __gnu_cxx::new_allocator<Recipe*>::destroy<Recipe*>(Recipe**)"
"Recipe** std::__uninitialized_copy_a<std::move_iterator<Recipe**>, Recipe**, Recipe*>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**, std::allocator<Recipe*>&)"
"std::move_iterator<Recipe**> std::__make_move_if_noexcept_iterator<Recipe**, std::move_iterator<Recipe**> >(Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::allocate(std::allocator<Recipe*>&, unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_JS2_EEEvPT_DpOT0_"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const)"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator*() const"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::operator()()"
"std::uniform_int_distribution<int>::param_type::a() const"
"std::uniform_int_distribution<int>::param_type::b() const"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~new_allocator()"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Recipe*> >::destroy<Recipe*>(std::allocator<Recipe*>&, Recipe**)"
"Recipe** std::__uninitialized_move_if_noexcept_a<Recipe**, Recipe**, std::allocator<Recipe*> >(Recipe**, Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_allocate(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__ops::_Iter_equals_val<char const>::_Iter_equals_val(char const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::allocator<Sandwich*>::~allocator()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator++()"
"bool __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::operator()<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::_Iter_equals_val(Ingredient* const&)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&, std::uniform_int_distribution<int>::param_type const&)"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIIEEEEOT_S8_RT0_"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIJEEEEOT_S8_RT0_"
"void __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_IRKS6_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()"
"void std::_Destroy_aux<true>::__destroy<Recipe**>(Recipe**, Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"_ZSt7forwardIP6RecipeEOT_RNSt16remove_referenceIS2_E4typeE"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const"
"bool __gnu_cxx::__ops::_Iter_equals_val<char const>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"
"bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()"
"bool __gnu_cxx::operator==<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiIEILj0EEEET_OSt5tupleIIDpT0_EESt12_Index_tupleIIXspT1_EEE"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiJEJLj0EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&)"
"_ZSt3getILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIIDpT0_EEE4typeERS6_"
"_ZSt3getILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEIEERT0_RSt11_Tuple_implIXT_EIS2_DpT1_EE"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE"
"_ZSt16forward_as_tupleIIEESt5tupleIIDpOT_EES3_"
"_ZSt16forward_as_tupleIJEESt5tupleIJDpOT_EES3_"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIIRKS5_EEEvDpOT_"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_"
"void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_IRKS5_EEEvRS6_PT_DpOT0_"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_"
"_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~_Vector_base()"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Recipe**>(Recipe**, Recipe**)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_deallocate(Recipe**, unsigned)"
"std::uniform_int_distribution<int>::param_type::param_type(int, int)"
"_ZSt4moveIRP6RecipeEONSt16remove_referenceIT_E4typeEOS4_"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"
"__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator<char*>(__gnu_cxx::__normal_iterator<char*, __gnu_cxx::__enable_if<std::__are_same<char*, char*>::__value, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__type> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"__gnu_cxx::__ops::_Iter_equals_val<char const> __gnu_cxx::__ops::__iter_equals_val<char const>(char const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> __gnu_cxx::__ops::__iter_equals_val<Ingredient* const>(Ingredient* const&)"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEclIIEiEET0_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEclIJEiEET0_DpOT_"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[](unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_check(unsigned) const"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()"
"void std::_Destroy<Recipe**, Recipe*>(Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator()"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>::_M_head(std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>&)"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"
"std::uniform_int_distribution<int>::uniform_int_distribution(int, int)"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"_ZN9__gnu_cxx6__stoaIffcIEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIlicIiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZNSt6vectorIP6RecipeSaIS1_EE9push_backEOS1_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::remove<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char>(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"bool __gnu_cxx::operator==<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::find<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient* const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"SandwichBar::generateRandSandwich()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::at(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"
"SandwichBar::tokenize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"SandwichBar::addIngredientLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"SandwichBar::addRecipeLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Setfill<char> std::setfill<char>(char)"
"SandwichBar::findRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"
"SandwichBar::orderMore(Order*)"
"SandwichBar::generateRandOrder()"
"SandwichBar::load()"
"SandwichBar::changeName()"
"SandwichBar::printDetails()"
"SandwichBar::addIngredient()"
"SandwichBar::addRecipe()"
"SandwichBar::lookup()"
"_ZN11SandwichBar10getRecipesB5cxx11Ev"
"SandwichBar::takeOrder()"
"SandwichBar::simulate(int)"
"SandwichBar::printHelp()"
"SandwichBar::printHeader()"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"std::setprecision(int)"
"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::__cxx11::stof(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*)"
"std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*, int)"
"operator delete(void*, void*)"
"operator new(unsigned, void*)"
"std::char_traits<char>::length(char const*)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZN8Sandwich5printB5cxx11Ev"
"Sandwich::getSubstitution()"
"Substitution::Substitution(Substitution const&)"
"Sandwich::hasSubstitution()"
"Sandwich::getRecipe()"
"Recipe::Recipe(Recipe const&)"
"Food::Food(Food const&)"
"Sandwich::getTotalCost()"
"Sandwich::make()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Sandwich::canMake()"
"Sandwich::~Sandwich()"
"Sandwich::Sandwich(Recipe*, Substitution*)"
"Sandwich::Sandwich(Recipe*)"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"Sandwich** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"Sandwich** std::__copy_move_a<false, Sandwich* const*, Sandwich**>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"std::move_iterator<Sandwich**>::move_iterator(Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator()"
"Sandwich** std::copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"Sandwich** std::uninitialized_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Sandwich*> >::max_size(std::allocator<Sandwich*> const&)"
"_ZSt4moveIRSaIP8SandwichEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP8SandwichEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"std::allocator<Sandwich*>::allocator()"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich* const* const&)"
"void __gnu_cxx::new_allocator<Sandwich*>::destroy<Sandwich*>(Sandwich**)"
"Sandwich** std::__uninitialized_copy_a<std::move_iterator<Sandwich**>, Sandwich**, Sandwich*>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**, std::allocator<Sandwich*>&)"
"std::move_iterator<Sandwich**> std::__make_move_if_noexcept_iterator<Sandwich**, std::move_iterator<Sandwich**> >(Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::__do_alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&, std::integral_constant<bool, true>)"
"void std::swap<Sandwich**>(Sandwich**&, Sandwich**&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::allocator<Sandwich*> const&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl()"
"Sandwich** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(unsigned, std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Sandwich*> >::select_on_container_copy_construction(std::allocator<Sandwich*> const&)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Sandwich*> >::destroy<Sandwich*>(std::allocator<Sandwich*>&, Sandwich**)"
"Sandwich** std::__uninitialized_move_if_noexcept_a<Sandwich**, Sandwich**, std::allocator<Sandwich*> >(Sandwich**, Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP8SandwichEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::__alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::get_allocator() const"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"Sandwich** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, Sandwich*>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, std::allocator<Sandwich*>&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::begin() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Sandwich*> >::_S_select_on_copy(std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::vector<Sandwich*, std::allocator<Sandwich*> > const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"_ZNSt6vectorIP8SandwichSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP8SandwichSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"
"_ZN5Order10printOrderB5cxx11Ev"
"Order::getSandwiches()"
"Order::getTotalCost()"
"Order::makeOrder()"
"Order::updateTotalCost()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::push_back(Sandwich* const&)"
"Order::addSandwich(Sandwich*)"
"Order::~Order()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"Order::Order(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"_ZNSt6vectorIP8SandwichSaIS1_EEaSEOS3_"
"operator new(unsigned, void*)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Substitution::getRemovals()"
"Substitution::getAdditions()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"_ZN12Substitution17printSubstitutionB5cxx11Ev"
"Substitution::getTotalRemoveCost()"
"Substitution::calculateCost(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Substitution::getTotalAddCost()"
"Substitution::addRemoval(Ingredient*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Substitution::addAddition(Ingredient*)"
"Substitution::~Substitution()"
"Substitution::Substitution()"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"operator new(unsigned, void*)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"
"SimpleIngredient::SimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()"
"Inventory::getRandomIngredient()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZN9Inventory19getInventoryDetailsB5cxx11Ev"
"Inventory::getIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::addComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Inventory::addSimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned, char const*, char*), unsigned, char const*, ...)"
"std::__cxx11::to_string(int)"
"operator new(unsigned, void*)"
"Ingredient::Ingredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Ingredient::~Ingredient()"
"ComplexIngredient::ComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"

"SandwichBar::~SandwichBar()"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"
"__gnu_cxx::new_allocator<Recipe*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Recipe**>(Recipe**, Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"
"std::allocator<Recipe*>::~allocator()"
"void std::_Destroy<Recipe**>(Recipe**, Recipe**)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::~_Vector_base()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_deallocate(Recipe**, unsigned)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Recipe**, Recipe*>(Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator()"
"std::vector<Recipe*, std::allocator<Recipe*> >::~vector()"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::allocator<Ingredient*>::~allocator()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::~Inventory()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"

"SandwichBar::SandwichBar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float)"
"__gnu_cxx::new_allocator<Recipe*>::new_allocator()"
"std::allocator<Recipe*>::allocator()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_base()"
"std::vector<Recipe*, std::allocator<Recipe*> >::vector()"
"SandwichBar::setupBar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Inventory::Inventory()"

"SandwichBar::SandwichBar()"
"__gnu_cxx::new_allocator<Recipe*>::new_allocator()"
"std::allocator<Recipe*>::allocator()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_base()"
"std::vector<Recipe*, std::allocator<Recipe*> >::vector()"
"SandwichBar::setupBar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Inventory::Inventory()"

"SandwichBar::setupBar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float)"
"__gnu_cxx::new_allocator<Recipe*>::new_allocator()"
"std::allocator<Recipe*>::allocator()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_base()"
"std::vector<Recipe*, std::allocator<Recipe*> >::vector()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Inventory::Inventory()"

"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"std::__cxx11::stof(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*)"
"_ZN9__gnu_cxx6__stoaIffcIEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"

"std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*, int)"
"_ZN9__gnu_cxx6__stoaIlicIiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"

"_GLOBAL__sub_I_generator"
"std::__detail::_Mod<unsigned, 2147483647, 1, 0, true, true>::__calc(unsigned)"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IIRS3_EEERKS1_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IIRS3_EEERKS1_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IJRS3_EEERKS1_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IJRS3_EEERKS1_DpOT_"
"_ZNSt5tupleIISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IIRS1_EvEEDpOT_"
"_ZNSt5tupleIJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IJRS1_EvEEDpOT_"
"_ZNSt5tupleIISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IIRS1_EvEEDpOT_"
"_ZNSt5tupleIJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IJRS1_EvEEDpOT_"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC1IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC2IRS1_EEOT_"
"std::uniform_int_distribution<int>::param_type::param_type(int, int)"
"unsigned std::__detail::__mod<unsigned, 2147483647, 1, 0>(unsigned)"
"std::_Weak_result_type<std::uniform_int_distribution<int> >::_Weak_result_type()"
"std::_Weak_result_type_impl<std::uniform_int_distribution<int> >::_Weak_result_type_impl()"
"std::_Maybe_get_result_type<std::uniform_int_distribution<int>, void>::_Maybe_get_result_type()"
"_ZSt4bindIRSt24uniform_int_distributionIiEIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEENSt12_Bind_helperIXsrSt5__or_IISt11is_integralINSt5decayIT_E4typeEESt7is_enumISC_EEE5valueESA_IDpT0_EE4typeEOSA_DpOSH_"
"_ZSt4bindIRSt24uniform_int_distributionIiEJRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEENSt12_Bind_helperIXsrSt5__or_IJSt11is_integralINSt5decayIT_E4typeEESt7is_enumISC_EEE5valueESA_JDpT0_EE4typeEOSA_DpOSH_"
"std::_Maybe_wrap_member_pointer<std::uniform_int_distribution<int> >::__do_wrap(std::uniform_int_distribution<int> const&)"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"
"_ZSt7forwardIRSt24uniform_int_distributionIiEEOT_RNSt16remove_referenceIS3_E4typeE"
"std::uniform_int_distribution<int>::uniform_int_distribution(int, int)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::linear_congruential_engine(unsigned)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::seed(unsigned)"
"__static_initialization_and_destruction_0(int, int)"

"__static_initialization_and_destruction_0(int, int)"
"std::__detail::_Mod<unsigned, 2147483647, 1, 0, true, true>::__calc(unsigned)"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IIRS3_EEERKS1_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IIRS3_EEERKS1_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IJRS3_EEERKS1_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IJRS3_EEERKS1_DpOT_"
"_ZNSt5tupleIISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IIRS1_EvEEDpOT_"
"_ZNSt5tupleIJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IJRS1_EvEEDpOT_"
"_ZNSt5tupleIISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IIRS1_EvEEDpOT_"
"_ZNSt5tupleIJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IJRS1_EvEEDpOT_"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC1IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IRS1_EEOT_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEC2IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC1IRS1_EEOT_"
"_ZNSt10_Head_baseILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0EEC2IRS1_EEOT_"
"std::uniform_int_distribution<int>::param_type::param_type(int, int)"
"unsigned std::__detail::__mod<unsigned, 2147483647, 1, 0>(unsigned)"
"std::_Weak_result_type<std::uniform_int_distribution<int> >::_Weak_result_type()"
"std::_Weak_result_type_impl<std::uniform_int_distribution<int> >::_Weak_result_type_impl()"
"std::_Maybe_get_result_type<std::uniform_int_distribution<int>, void>::_Maybe_get_result_type()"
"_ZSt4bindIRSt24uniform_int_distributionIiEIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEENSt12_Bind_helperIXsrSt5__or_IISt11is_integralINSt5decayIT_E4typeEESt7is_enumISC_EEE5valueESA_IDpT0_EE4typeEOSA_DpOSH_"
"_ZSt4bindIRSt24uniform_int_distributionIiEJRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEENSt12_Bind_helperIXsrSt5__or_IJSt11is_integralINSt5decayIT_E4typeEESt7is_enumISC_EEE5valueESA_JDpT0_EE4typeEOSA_DpOSH_"
"std::_Maybe_wrap_member_pointer<std::uniform_int_distribution<int> >::__do_wrap(std::uniform_int_distribution<int> const&)"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"
"_ZSt7forwardIRSt24uniform_int_distributionIiEEOT_RNSt16remove_referenceIS3_E4typeE"
"std::uniform_int_distribution<int>::uniform_int_distribution(int, int)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::linear_congruential_engine(unsigned)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::seed(unsigned)"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"

"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"

"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"

"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"

"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"

"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"

"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"

"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"

"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"

"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::~allocator()"

"std::allocator<Food*>::~allocator()"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"

"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::~allocator()"

"std::allocator<Ingredient*>::~allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"

"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"

"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::vector<Food*, std::allocator<Food*> >::begin() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"

"std::vector<Food*, std::allocator<Food*> >::end() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"

"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"

"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"_ZN8Sandwich5printB5cxx11Ev"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"_ZN12Substitution17printSubstitutionB5cxx11Ev"

"Sandwich::getSubstitution()"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Substitution::Substitution(Substitution const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Substitution::Substitution()"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"

"Substitution::Substitution(Substitution const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Sandwich::getRecipe()"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"Recipe::Recipe(Recipe const&)"
"Food::Food(Food const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"

"Recipe::Recipe(Recipe const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"Food::Food(Food const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"

"Food::Food(Food const&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"

"Sandwich::getTotalCost()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Substitution::getTotalRemoveCost()"
"Substitution::calculateCost(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Substitution::getTotalAddCost()"

"Sandwich::make()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Sandwich::canMake()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"Substitution::getRemovals()"
"Substitution::getAdditions()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Sandwich::canMake()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"Substitution::getRemovals()"
"Substitution::getAdditions()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Sandwich::~Sandwich()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Substitution::~Substitution()"

"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"std::move_iterator<Sandwich**>::base() const"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"

"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"

"Sandwich** std::__copy_move_a<false, Sandwich* const*, Sandwich**>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"

"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"

"Sandwich** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"Sandwich** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<false, Sandwich* const*, Sandwich**>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"

"Sandwich** std::copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"Sandwich** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<false, Sandwich* const*, Sandwich**>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"Sandwich** std::uninitialized_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"

"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"

"std::allocator_traits<std::allocator<Sandwich*> >::max_size(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"

"std::allocator<Sandwich*>::allocator()"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator()"

"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"Sandwich** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<false, Sandwich* const*, Sandwich**>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"

"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"

"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich** const&)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"

"Sandwich** std::__uninitialized_copy_a<std::move_iterator<Sandwich**>, Sandwich**, Sandwich*>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**, std::allocator<Sandwich*>&)"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"Sandwich** std::uninitialized_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"

"std::move_iterator<Sandwich**> std::__make_move_if_noexcept_iterator<Sandwich**, std::move_iterator<Sandwich**> >(Sandwich**)"
"std::move_iterator<Sandwich**>::move_iterator(Sandwich**)"

"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::max_size() const"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"std::allocator_traits<std::allocator<Sandwich*> >::max_size(std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"

"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"_ZSt7forwardIRKP8SandwichEOT_RNSt16remove_referenceIS4_E4typeE"
"operator new(unsigned, void*)"

"void std::__do_alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&, std::integral_constant<bool, true>)"
"_ZSt4moveIRSaIP8SandwichEEONSt16remove_referenceIT_E4typeEOS5_"

"void std::swap<Sandwich**>(Sandwich**&, Sandwich**&)"
"_ZSt4moveIRPP8SandwichEONSt16remove_referenceIT_E4typeEOS5_"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"

"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl()"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator()"
"std::allocator<Sandwich*>::allocator()"

"Sandwich** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"Sandwich** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<false, Sandwich* const*, Sandwich**>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(unsigned, std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_create_storage(unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"

"std::allocator_traits<std::allocator<Sandwich*> >::select_on_container_copy_construction(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"

"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > std::move<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich** const&)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"bool __gnu_cxx::operator!=<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > const&, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > const&)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::end()"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich** const&)"

"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"std::move_iterator<Sandwich**>::move_iterator(Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"Sandwich** std::uninitialized_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Sandwich*> >::max_size(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"void __gnu_cxx::new_allocator<Sandwich*>::destroy<Sandwich*>(Sandwich**)"
"Sandwich** std::__uninitialized_copy_a<std::move_iterator<Sandwich**>, Sandwich**, Sandwich*>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**, std::allocator<Sandwich*>&)"
"std::move_iterator<Sandwich**> std::__make_move_if_noexcept_iterator<Sandwich**, std::move_iterator<Sandwich**> >(Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"void std::allocator_traits<std::allocator<Sandwich*> >::destroy<Sandwich*>(std::allocator<Sandwich*>&, Sandwich**)"
"Sandwich** std::__uninitialized_move_if_noexcept_a<Sandwich**, Sandwich**, std::allocator<Sandwich*> >(Sandwich**, Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP8SandwichEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"operator new(unsigned, void*)"

"void std::allocator_traits<std::allocator<Sandwich*> >::destroy<Sandwich*>(std::allocator<Sandwich*>&, Sandwich**)"
"void __gnu_cxx::new_allocator<Sandwich*>::destroy<Sandwich*>(Sandwich**)"

"Sandwich** std::__uninitialized_move_if_noexcept_a<Sandwich**, Sandwich**, std::allocator<Sandwich*> >(Sandwich**, Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"std::move_iterator<Sandwich**>::move_iterator(Sandwich**)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"Sandwich** std::uninitialized_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__uninitialized_copy_a<std::move_iterator<Sandwich**>, Sandwich**, Sandwich*>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**, std::allocator<Sandwich*>&)"
"std::move_iterator<Sandwich**> std::__make_move_if_noexcept_iterator<Sandwich**, std::move_iterator<Sandwich**> >(Sandwich**)"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_check_len(unsigned, char const*) const"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"std::allocator_traits<std::allocator<Sandwich*> >::max_size(std::allocator<Sandwich*> const&)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::max_size() const"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"

"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"_ZSt7forwardIRKP8SandwichEOT_RNSt16remove_referenceIS4_E4typeE"
"operator new(unsigned, void*)"

"void std::__alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&)"
"_ZSt4moveIRSaIP8SandwichEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__do_alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&, std::integral_constant<bool, true>)"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl&)"
"_ZSt4moveIRPP8SandwichEONSt16remove_referenceIT_E4typeEOS5_"
"void std::swap<Sandwich**>(Sandwich**&, Sandwich**&)"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::get_allocator() const"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"

"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base()"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator()"
"std::allocator<Sandwich*>::allocator()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl()"

"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::~allocator()"

"std::allocator<Sandwich*>::~allocator()"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"

"Sandwich** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, Sandwich*>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, std::allocator<Sandwich*>&)"
"Sandwich** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<false, Sandwich* const*, Sandwich**>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"Sandwich** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::begin() const"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich* const* const&)"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::end() const"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich* const* const&)"

"__gnu_cxx::__alloc_traits<std::allocator<Sandwich*> >::_S_select_on_copy(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"std::allocator_traits<std::allocator<Sandwich*> >::select_on_container_copy_construction(std::allocator<Sandwich*> const&)"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::vector<Sandwich*, std::allocator<Sandwich*> > const&)"
"Sandwich** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<false, Sandwich* const*, Sandwich**>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"Sandwich** std::copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich* const* const&)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"Sandwich** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(unsigned, std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Sandwich*> >::select_on_container_copy_construction(std::allocator<Sandwich*> const&)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"Sandwich** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, Sandwich*>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, std::allocator<Sandwich*>&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::begin() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Sandwich*> >::_S_select_on_copy(std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_erase(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"void __gnu_cxx::new_allocator<Sandwich*>::destroy<Sandwich*>(Sandwich**)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > std::move<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"bool __gnu_cxx::operator!=<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > const&, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::end()"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich** const&)"
"void std::allocator_traits<std::allocator<Sandwich*> >::destroy<Sandwich*>(std::allocator<Sandwich*>&, Sandwich**)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::operator+(int) const"

"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::difference_type __gnu_cxx::operator-<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > const&, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > const)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich* const* const&)"

"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator<Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich**, __gnu_cxx::__enable_if<std::__are_same<Sandwich**, Sandwich**>::__value, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__type> const&)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"

"_ZNSt6vectorIP8SandwichSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"_ZSt4moveIRSaIP8SandwichEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP8SandwichEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"void std::__do_alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&, std::integral_constant<bool, true>)"
"void std::swap<Sandwich**>(Sandwich**&, Sandwich**&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::allocator<Sandwich*> const&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"void std::__alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::get_allocator() const"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"

"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector()"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator()"
"std::allocator<Sandwich*>::allocator()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base()"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"_ZN5Order10printOrderB5cxx11Ev"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZN8Sandwich5printB5cxx11Ev"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"_ZN12Substitution17printSubstitutionB5cxx11Ev"

"Order::getSandwiches()"
"Sandwich** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<false, Sandwich* const*, Sandwich**>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"Sandwich** std::copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich* const* const&)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"Sandwich** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(unsigned, std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Sandwich*> >::select_on_container_copy_construction(std::allocator<Sandwich*> const&)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"Sandwich** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, Sandwich*>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, std::allocator<Sandwich*>&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::begin() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Sandwich*> >::_S_select_on_copy(std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::vector<Sandwich*, std::allocator<Sandwich*> > const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"

"Order::makeOrder()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Sandwich::make()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Sandwich::canMake()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"Substitution::getRemovals()"
"Substitution::getAdditions()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::erase(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich* const* const&)"
"void __gnu_cxx::new_allocator<Sandwich*>::destroy<Sandwich*>(Sandwich**)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > std::move<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"bool __gnu_cxx::operator!=<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > const&, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::end()"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich** const&)"
"void std::allocator_traits<std::allocator<Sandwich*> >::destroy<Sandwich*>(std::allocator<Sandwich*>&, Sandwich**)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_erase(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::difference_type __gnu_cxx::operator-<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > const&, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > const)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::operator+(int) const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::begin()"

"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::operator+(int) const"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich** const&)"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::begin()"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich** const&)"

"Order::removeSandwich(int)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich* const* const&)"
"void __gnu_cxx::new_allocator<Sandwich*>::destroy<Sandwich*>(Sandwich**)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > std::move<__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"bool __gnu_cxx::operator!=<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > const&, __gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > > const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::end()"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich** const&)"
"void std::allocator_traits<std::allocator<Sandwich*> >::destroy<Sandwich*>(std::allocator<Sandwich*>&, Sandwich**)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_erase(__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::difference_type __gnu_cxx::operator-<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > const&, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > const)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator<Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich**, __gnu_cxx::__enable_if<std::__are_same<Sandwich**, Sandwich**>::__value, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__type> const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::erase(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"__gnu_cxx::__normal_iterator<Sandwich**, std::vector<Sandwich*, std::allocator<Sandwich*> > >::operator+(int) const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::begin()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"

"Order::updateTotalCost()"
"Sandwich::getTotalCost()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Substitution::getTotalRemoveCost()"
"Substitution::calculateCost(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Substitution::getTotalAddCost()"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::push_back(Sandwich* const&)"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"std::move_iterator<Sandwich**>::move_iterator(Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"Sandwich** std::uninitialized_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Sandwich*> >::max_size(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"void __gnu_cxx::new_allocator<Sandwich*>::destroy<Sandwich*>(Sandwich**)"
"Sandwich** std::__uninitialized_copy_a<std::move_iterator<Sandwich**>, Sandwich**, Sandwich*>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**, std::allocator<Sandwich*>&)"
"std::move_iterator<Sandwich**> std::__make_move_if_noexcept_iterator<Sandwich**, std::move_iterator<Sandwich**> >(Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Sandwich*> >::destroy<Sandwich*>(std::allocator<Sandwich*>&, Sandwich**)"
"Sandwich** std::__uninitialized_move_if_noexcept_a<Sandwich**, Sandwich**, std::allocator<Sandwich*> >(Sandwich**, Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP8SandwichEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"operator new(unsigned, void*)"

"Order::addSandwich(Sandwich*)"
"Sandwich::getTotalCost()"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"std::move_iterator<Sandwich**>::move_iterator(Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"Sandwich** std::uninitialized_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Sandwich*> >::max_size(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"void __gnu_cxx::new_allocator<Sandwich*>::destroy<Sandwich*>(Sandwich**)"
"Sandwich** std::__uninitialized_copy_a<std::move_iterator<Sandwich**>, Sandwich**, Sandwich*>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**, std::allocator<Sandwich*>&)"
"std::move_iterator<Sandwich**> std::__make_move_if_noexcept_iterator<Sandwich**, std::move_iterator<Sandwich**> >(Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Sandwich*> >::destroy<Sandwich*>(std::allocator<Sandwich*>&, Sandwich**)"
"Sandwich** std::__uninitialized_move_if_noexcept_a<Sandwich**, Sandwich**, std::allocator<Sandwich*> >(Sandwich**, Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP8SandwichEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"Order::updateTotalCost()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::push_back(Sandwich* const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"operator new(unsigned, void*)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Substitution::getTotalRemoveCost()"
"Substitution::calculateCost(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Substitution::getTotalAddCost()"

"Order::~Order()"
"Sandwich::~Sandwich()"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Substitution::~Substitution()"

"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"

"Order::Order(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator()"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"_ZSt4moveIRSaIP8SandwichEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP8SandwichEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"std::allocator<Sandwich*>::allocator()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"void std::__do_alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&, std::integral_constant<bool, true>)"
"void std::swap<Sandwich**>(Sandwich**&, Sandwich**&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::allocator<Sandwich*> const&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl()"
"void std::__alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::get_allocator() const"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP8SandwichSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP8SandwichSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector()"
"_ZNSt6vectorIP8SandwichSaIS1_EEaSEOS3_"

"_ZNSt6vectorIP8SandwichSaIS1_EEaSEOS3_"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"_ZSt4moveIRSaIP8SandwichEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP8SandwichEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"void std::__do_alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&, std::integral_constant<bool, true>)"
"void std::swap<Sandwich**>(Sandwich**&, Sandwich**&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::allocator<Sandwich*> const&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"void std::__alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::get_allocator() const"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP8SandwichSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP8SandwichSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"

"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::move_iterator<Ingredient**>::base() const"

"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"

"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"std::allocator<Ingredient*>::allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"

"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"

"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"operator new(unsigned, void*)"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"

"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"

"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"

"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"

"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"

"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"

"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"

"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"operator new(unsigned, void*)"

"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"

"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"

"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::~allocator()"

"std::allocator<Ingredient*>::~allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"

"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"

"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"

"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"

"Substitution::getRemovals()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Substitution::getAdditions()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"_ZN12Substitution17printSubstitutionB5cxx11Ev"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Substitution::getTotalRemoveCost()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Substitution::calculateCost(std::vector<Ingredient*, std::allocator<Ingredient*> >)"

"Substitution::calculateCost(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Substitution::getTotalAddCost()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Substitution::calculateCost(std::vector<Ingredient*, std::allocator<Ingredient*> >)"

"Substitution::addRemoval(Ingredient*)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"operator new(unsigned, void*)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"

"Substitution::addAddition(Ingredient*)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"operator new(unsigned, void*)"

"Substitution::~Substitution()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"

"Substitution::Substitution(std::vector<Ingredient*, std::allocator<Ingredient*> >, std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"

"Substitution::Substitution()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"

"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"

"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"

"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"std::move_iterator<Food**>::base() const"

"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::move_iterator<Food**>::base() const"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"

"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"

"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"

"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"

"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"

"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"

"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"

"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"

"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"

"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"_ZSt7forwardIRKP4FoodEOT_RNSt16remove_referenceIS4_E4typeE"
"operator new(unsigned, void*)"

"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"

"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"

"void std::swap<Food**>(Food**&, Food**&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"

"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"std::allocator<Food*>::allocator()"

"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"

"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP4FoodEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"operator new(unsigned, void*)"

"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"

"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"

"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::size() const"

"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"_ZSt7forwardIRKP4FoodEOT_RNSt16remove_referenceIS4_E4typeE"
"operator new(unsigned, void*)"

"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"

"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"void std::swap<Food**>(Food**&, Food**&)"

"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"std::allocator<Food*>::allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"

"void std::_Destroy<Food**>(Food**, Food**)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"

"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::~allocator()"

"std::allocator<Food*>::~allocator()"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"

"std::vector<Food*, std::allocator<Food*> >::_M_range_check(unsigned) const"
"std::vector<Food*, std::allocator<Food*> >::size() const"

"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::vector<Food*, std::allocator<Food*> >::begin() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"

"std::vector<Food*, std::allocator<Food*> >::end() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"

"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"

"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"

"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"

"std::vector<Food*, std::allocator<Food*> >::vector()"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"std::allocator<Food*>::allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"

"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"void std::_Destroy<Food**>(Food**, Food**)"

"std::vector<Food*, std::allocator<Food*> >::~vector()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"

"std::vector<Food*, std::allocator<Food*> >::push_back(Food* const&)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP4FoodEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"operator new(unsigned, void*)"

"Food::addReferences(std::vector<Food*, std::allocator<Food*> >)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP4FoodEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::vector<Food*, std::allocator<Food*> >::operator[](unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_range_check(unsigned) const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::push_back(Food* const&)"
"std::vector<Food*, std::allocator<Food*> >::at(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"operator new(unsigned, void*)"

"std::vector<Food*, std::allocator<Food*> >::at(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::operator[](unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_range_check(unsigned) const"
"std::vector<Food*, std::allocator<Food*> >::size() const"

"_ZN4Food15printReferencesB5cxx11Ev"
"std::vector<Food*, std::allocator<Food*> >::operator[](unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_range_check(unsigned) const"
"std::vector<Food*, std::allocator<Food*> >::at(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::size() const"

"Food::getReferences()"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"

"Food::manageReferences()"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"

"Food::Food()"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"

"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"

"Food::~Food()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"

"Food::~Food()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"

"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"

"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"

"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"

"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"

"void std::_Destroy<Food**>(Food**, Food**)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"

"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::~allocator()"

"std::allocator<Food*>::~allocator()"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"

"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"void std::_Destroy<Food**>(Food**, Food**)"

"std::vector<Food*, std::allocator<Food*> >::~vector()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"

"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::vector<Food*, std::allocator<Food*> >::begin() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"

"std::vector<Food*, std::allocator<Food*> >::end() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"

"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"

"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"SimpleIngredient::updateReferences(std::vector<Food*, std::allocator<Food*> >)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP4FoodEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::vector<Food*, std::allocator<Food*> >::operator[](unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_range_check(unsigned) const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::push_back(Food* const&)"
"Food::addReferences(std::vector<Food*, std::allocator<Food*> >)"
"std::vector<Food*, std::allocator<Food*> >::at(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"operator new(unsigned, void*)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::_Destroy<Food**>(Food**, Food**)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"_ZN16SimpleIngredient12printDetailsB5cxx11Ev"
"std::vector<Food*, std::allocator<Food*> >::operator[](unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_range_check(unsigned) const"
"std::vector<Food*, std::allocator<Food*> >::at(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"_ZN4Food15printReferencesB5cxx11Ev"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::_Setfill<char> std::setfill<char>(char)"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZN10Ingredient11printHeaderB5cxx11Ev"
"std::setprecision(int)"
"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned, char const*, char*), unsigned, char const*, ...)"
"std::__cxx11::to_string(int)"

"SimpleIngredient::~SimpleIngredient()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"
"SimpleIngredient::~SimpleIngredient()"
"Ingredient::~Ingredient()"

"SimpleIngredient::~SimpleIngredient()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"
"Ingredient::~Ingredient()"

"SimpleIngredient::SimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"
"Ingredient::Ingredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Ingredient::~Ingredient()"

"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"

"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::move_iterator<Ingredient**>::base() const"

"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"

"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"

"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"

"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"

"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"

"std::allocator<Ingredient*>::allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"

"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"

"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"

"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"

"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"operator new(unsigned, void*)"

"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"

"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"

"std::allocator<Ingredient*>::~allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::move<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"

"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"

"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"operator new(unsigned, void*)"

"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"

"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::~allocator()"

"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"

"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::move<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"

"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"

"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator<Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, __gnu_cxx::__enable_if<std::__are_same<Ingredient**, Ingredient**>::__value, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__type> const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"

"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::allocator<Ingredient*>::~allocator()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"

"Inventory::getRandomIngredient()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Inventory::getInventorySize()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"_ZN9Inventory19getInventoryDetailsB5cxx11Ev"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned, char const*, char*), unsigned, char const*, ...)"
"std::__cxx11::to_string(int)"

"Inventory::getIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Inventory::exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Inventory::removeIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::move<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator<Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, __gnu_cxx::__enable_if<std::__are_same<Ingredient**, Ingredient**>::__value, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__type> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::erase(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::erase(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::move<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"

"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"

"Inventory::removeIngredient(Ingredient*)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::move<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"bool __gnu_cxx::operator!=<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::cbegin() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator<Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient**, __gnu_cxx::__enable_if<std::__are_same<Ingredient**, Ingredient**>::__value, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__type> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::erase(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator+(int) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Inventory::addComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"
"Ingredient::Ingredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Ingredient::~Ingredient()"
"ComplexIngredient::ComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"

"Inventory::addSimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"
"SimpleIngredient::SimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"
"Ingredient::Ingredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Ingredient::~Ingredient()"

"Inventory::~Inventory()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::allocator<Ingredient*>::~allocator()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"Inventory::Inventory()"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"

"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned, char const*, char*), unsigned, char const*, ...)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()"

"std::__cxx11::to_string(int)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned, char const*, char*), unsigned, char const*, ...)"

"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"

"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"

"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"

"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"

"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"_ZN10Ingredient11printHeaderB5cxx11Ev"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::_Setfill<char> std::setfill<char>(char)"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"std::setprecision(int)"
"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned, char const*, char*), unsigned, char const*, ...)"
"std::__cxx11::to_string(int)"

"Ingredient::Ingredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"

"Ingredient::~Ingredient()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"
"Ingredient::~Ingredient()"

"Ingredient::~Ingredient()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"

"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"

"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned, char const*, char*), unsigned, char const*, ...)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()"

"std::__cxx11::to_string(int)"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned, char const*, char*), unsigned, char const*, ...)"

"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"

"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"std::move_iterator<Food**>::base() const"

"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::move_iterator<Food**>::base() const"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"

"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"

"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"

"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"

"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"

"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"

"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"

"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"

"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"

"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"operator new(unsigned, void*)"

"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"

"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"

"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"operator new(unsigned, void*)"

"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"

"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"

"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"operator new(unsigned, void*)"

"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"

"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"

"std::allocator<Ingredient*>::~allocator()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"

"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"operator new(unsigned, void*)"

"void std::_Destroy<Food**>(Food**, Food**)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"

"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"

"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"

"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::~allocator()"

"std::allocator<Food*>::~allocator()"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"

"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"

"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"

"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::~allocator()"

"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"void std::_Destroy<Food**>(Food**, Food**)"

"std::vector<Food*, std::allocator<Food*> >::~vector()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"

"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"

"std::vector<Food*, std::allocator<Food*> >::begin() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"

"std::vector<Food*, std::allocator<Food*> >::end() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"

"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"

"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::allocator<Ingredient*>::~allocator()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"

"_ZNSt6vectorIP4FoodSaIS1_EE9push_backEOS1_"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"_ZSt4moveIRP4FoodEONSt16remove_referenceIT_E4typeEOS4_"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"operator new(unsigned, void*)"

"ComplexIngredient::updateReferences(std::vector<Food*, std::allocator<Food*> >)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP4FoodEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::vector<Food*, std::allocator<Food*> >::operator[](unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_range_check(unsigned) const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::push_back(Food* const&)"
"Food::addReferences(std::vector<Food*, std::allocator<Food*> >)"
"std::vector<Food*, std::allocator<Food*> >::at(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"operator new(unsigned, void*)"
"Food** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::move_iterator<Food**>::base() const"
"Food** std::__copy_move_a<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Iter_base<std::move_iterator<Food**>, true>::_S_base(std::move_iterator<Food**>)"
"Food** std::__copy_move_a2<true, Food**, Food**>(Food**, Food**, Food**)"
"std::_Miter_base<std::move_iterator<Food**> >::iterator_type std::__miter_base<std::move_iterator<Food**> >(std::move_iterator<Food**>)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Food** std::copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::move_iterator<Food**>::move_iterator(Food**)"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Food** std::uninitialized_copy<std::move_iterator<Food**>, Food**>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**)"
"std::allocator_traits<std::allocator<Food*> >::max_size(std::allocator<Food*> const&)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"void __gnu_cxx::new_allocator<Food*>::destroy<Food*>(Food**)"
"Food** std::__uninitialized_copy_a<std::move_iterator<Food**>, Food**, Food*>(std::move_iterator<Food**>, std::move_iterator<Food**>, Food**, std::allocator<Food*>&)"
"std::move_iterator<Food**> std::__make_move_if_noexcept_iterator<Food**, std::move_iterator<Food**> >(Food**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Food*, std::allocator<Food*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP4FoodE9constructIS2_JS2_EEEvPT_DpOT0_"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Food*> >::destroy<Food*>(std::allocator<Food*>&, Food**)"
"Food** std::__uninitialized_move_if_noexcept_a<Food**, Food**, std::allocator<Food*> >(Food**, Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP4FoodEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP4FoodSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"_ZSt7forwardIP4FoodEOT_RNSt16remove_referenceIS2_E4typeE"
"void std::_Destroy<Food**>(Food**, Food**)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"_ZSt4moveIRP4FoodEONSt16remove_referenceIT_E4typeEOS4_"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"_ZNSt6vectorIP4FoodSaIS1_EE9push_backEOS1_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"operator new(unsigned, void*)"

"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"

"_ZN17ComplexIngredient12printDetailsB5cxx11Ev"
"std::vector<Food*, std::allocator<Food*> >::operator[](unsigned)"
"std::vector<Food*, std::allocator<Food*> >::_M_range_check(unsigned) const"
"std::vector<Food*, std::allocator<Food*> >::at(unsigned)"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"_ZN4Food15printReferencesB5cxx11Ev"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::_Setfill<char> std::setfill<char>(char)"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZN10Ingredient11printHeaderB5cxx11Ev"
"std::setprecision(int)"
"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned, char const*, char*), unsigned, char const*, ...)"
"std::__cxx11::to_string(int)"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"ComplexIngredient::useIngredient()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"ComplexIngredient::canUse()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"ComplexIngredient::getQuantity()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"ComplexIngredient::getCost()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"ComplexIngredient::orderMore(int)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"

"ComplexIngredient::~ComplexIngredient()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"
"Ingredient::~Ingredient()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::allocator<Ingredient*>::~allocator()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"ComplexIngredient::~ComplexIngredient()"

"ComplexIngredient::~ComplexIngredient()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::~Food()"
"Ingredient::~Ingredient()"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::allocator<Ingredient*>::~allocator()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"

"ComplexIngredient::ComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"
"Ingredient::Ingredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Ingredient::~Ingredient()"

"main"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"ComplexRecipe::ComplexRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, Recipe*, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<Ingredient**>::iterator_type std::__miter_base<Ingredient**>(Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"void std::__do_alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&, std::integral_constant<bool, false>)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_erase_at_end(Ingredient**)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Ingredient** std::__uninitialized_copy_a<Ingredient**, Ingredient**, Ingredient*>(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"Ingredient** std::copy<Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"void std::_Destroy<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, std::allocator<Ingredient*>&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"Ingredient** std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(unsigned, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::capacity() const"
"void std::__alloc_on_copy<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::clear()"
"bool std::operator!=<Ingredient*>(std::allocator<Ingredient*> const&, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_always_equal()"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_propagate_on_copy_assign()"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Recipe::getIngredients()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Recipe::~Recipe()"
"Recipe::Recipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Ingredient*, std::allocator<Ingredient*> >, float)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator=(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Recipe** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Recipe*>(Recipe* const*, Recipe* const*, Recipe**)"
"std::_Iter_base<Recipe**, false>::_S_base(Recipe**)"
"std::move_iterator<Recipe**>::base() const"
"Recipe** std::__copy_move_a<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Niter_base<Recipe**>::iterator_type std::__niter_base<Recipe**>(Recipe**)"
"std::_Iter_base<std::move_iterator<Recipe**>, true>::_S_base(std::move_iterator<Recipe**>)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Recipe** std::__copy_move_a2<true, Recipe**, Recipe**>(Recipe**, Recipe**, Recipe**)"
"std::_Miter_base<std::move_iterator<Recipe**> >::iterator_type std::__miter_base<std::move_iterator<Recipe**> >(std::move_iterator<Recipe**>)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::base() const"
"Recipe** std::copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIS5_EEvPT_DpOT0_"
"_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_"
"_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE"
"bool std::operator==<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"Recipe** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"std::move_iterator<Recipe**>::move_iterator(Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::max_size() const"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::__detail::_Mod<unsigned, 2147483647, 16807, 0, false, true>::__calc(unsigned)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator++()"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::operator*() const"
"bool std::operator!=<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> const&)"
"Recipe** std::uninitialized_copy<std::move_iterator<Recipe**>, Recipe**>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**)"
"__gnu_cxx::new_allocator<Recipe*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Recipe*> >::max_size(std::allocator<Recipe*> const&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"unsigned std::__detail::__mod<unsigned, 2147483647, 16807, 0>(unsigned)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::max_size() const"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::new_allocator()"
"__gnu_cxx::new_allocator<Recipe*>::new_allocator()"
"void __gnu_cxx::new_allocator<Recipe*>::destroy<Recipe*>(Recipe**)"
"Recipe** std::__uninitialized_copy_a<std::move_iterator<Recipe**>, Recipe**, Recipe*>(std::move_iterator<Recipe**>, std::move_iterator<Recipe**>, Recipe**, std::allocator<Recipe*>&)"
"std::move_iterator<Recipe**> std::__make_move_if_noexcept_iterator<Recipe**, std::move_iterator<Recipe**> >(Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::allocate(std::allocator<Recipe*>&, unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_IS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP6RecipeE9constructIS2_JS2_EEEvPT_DpOT0_"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const)"
"std::allocator<Ingredient*>::allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator*() const"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>::operator()()"
"std::uniform_int_distribution<int>::param_type::a() const"
"std::uniform_int_distribution<int>::param_type::b() const"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator() const"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocator()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__addressof<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~new_allocator()"
"std::allocator<Recipe*>::allocator()"
"__gnu_cxx::new_allocator<Recipe*>::deallocate(Recipe**, unsigned)"
"__gnu_cxx::new_allocator<Recipe*>::~new_allocator()"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Recipe*> >::destroy<Recipe*>(std::allocator<Recipe*>&, Recipe**)"
"Recipe** std::__uninitialized_move_if_noexcept_a<Recipe**, Recipe**, std::allocator<Recipe*> >(Recipe**, Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_allocate(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP6RecipeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__ops::_Iter_equals_val<char const>::_Iter_equals_val(char const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::allocator<Sandwich*>::~allocator()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::operator++()"
"bool __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::operator()<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::difference_type __gnu_cxx::operator-<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>::_Iter_equals_val(Ingredient* const&)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&, std::uniform_int_distribution<int>::param_type const&)"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIIEEEEOT_S8_RT0_"
"_ZNVKSt3_MuISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EELb0ELb0EEclIRS1_St5tupleIJEEEEOT_S8_RT0_"
"void __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> std::__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_IRKS6_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::deallocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~allocator()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Recipe**>(Recipe**, Recipe**)"
"std::allocator_traits<std::allocator<Recipe*> >::deallocate(std::allocator<Recipe*>&, Recipe**, unsigned)"
"std::allocator<Recipe*>::~allocator()"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIIS1_EEEvDpOT_"
"_ZNSt6vectorIP6RecipeSaIS1_EE12emplace_backIJS1_EEEvDpOT_"
"_ZSt7forwardIP6RecipeEOT_RNSt16remove_referenceIS2_E4typeE"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator*() const"
"bool __gnu_cxx::__ops::_Iter_equals_val<char const>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"
"bool __gnu_cxx::operator!=<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++()"
"bool __gnu_cxx::operator==<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__find_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>, std::random_access_iterator_tag)"
"std::iterator_traits<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient** const&)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiIEILj0EEEET_OSt5tupleIIDpT0_EESt12_Index_tupleIIXspT1_EEE"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE6__callIiJEJLj0EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE"
"int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned, 16807, 0, 2147483647> >(std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>&)"
"_ZSt3getILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIIDpT0_EEE4typeERS6_"
"_ZSt3getILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEIEERT0_RSt11_Tuple_implIXT_EIS2_DpT1_EE"
"_ZSt12__get_helperILj0ESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE"
"_ZSt16forward_as_tupleIIEESt5tupleIIDpOT_EES3_"
"_ZSt16forward_as_tupleIJEESt5tupleIJDpOT_EES3_"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIIRKS5_EEEvDpOT_"
"_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_"
"void std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_IRKS5_EEEvRS6_PT_DpOT0_"
"_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_"
"_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base()"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~_Vector_base()"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_impl::~_Vector_impl()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_base()"
"void std::_Destroy<Recipe**>(Recipe**, Recipe**)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::~_Vector_base()"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_deallocate(Recipe**, unsigned)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_Vector_impl::~_Vector_impl()"
"std::uniform_int_distribution<int>::param_type::param_type(int, int)"
"_ZSt4moveIRP6RecipeEONSt16remove_referenceIT_E4typeEOS4_"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::base() const"
"__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator<char*>(__gnu_cxx::__normal_iterator<char*, __gnu_cxx::__enable_if<std::__are_same<char*, char*>::__value, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__type> const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)"
"__gnu_cxx::__ops::_Iter_equals_val<char const> __gnu_cxx::__ops::__iter_equals_val<char const>(char const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::__find_if<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__ops::_Iter_equals_val<Ingredient* const>)"
"__gnu_cxx::__ops::_Iter_equals_val<Ingredient* const> __gnu_cxx::__ops::__iter_equals_val<Ingredient* const>(Ingredient* const&)"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEclIIEiEET0_DpOT_"
"_ZNSt5_BindIFSt24uniform_int_distributionIiESt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEEclIJEiEET0_DpOT_"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[](unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_check(unsigned) const"
"void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)"
"std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_Tp_allocator()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()"
"std::vector<Recipe*, std::allocator<Recipe*> >::vector()"
"void std::_Destroy<Recipe**, Recipe*>(Recipe**, Recipe**, std::allocator<Recipe*>&)"
"std::_Vector_base<Recipe*, std::allocator<Recipe*> >::_M_get_Tp_allocator()"
"std::vector<Recipe*, std::allocator<Recipe*> >::~vector()"
"std::vector<Recipe*, std::allocator<Recipe*> >::operator[](unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::_M_range_check(unsigned) const"
"_ZNSt11_Tuple_implILj0EISt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"_ZNSt11_Tuple_implILj0EJSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEE7_M_headERS2_"
"std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>::_M_head(std::_Head_base<0, std::linear_congruential_engine<unsigned, 16807, 0, 2147483647>, false>&)"
"_ZSt7forwardIRSt26linear_congruential_engineIjLj16807ELj0ELj2147483647EEEOT_RNSt16remove_referenceIS3_E4typeE"
"std::uniform_int_distribution<int>::uniform_int_distribution(int, int)"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"_ZN9__gnu_cxx6__stoaIffcIEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIlicIiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_"
"_ZNSt6vectorIP6RecipeSaIS1_EE9push_backEOS1_"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::remove<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char>(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"bool __gnu_cxx::operator==<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > const&)"
"__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > > std::find<__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient**, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient* const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"SandwichBar::generateRandSandwich()"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::at(unsigned)"
"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::size() const"
"SandwichBar::tokenize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"SandwichBar::addIngredientLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"SandwichBar::addRecipeLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"
"std::_Setfill<char> std::setfill<char>(char)"
"SandwichBar::findRecipe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"
"SandwichBar::orderMore(Order*)"
"SandwichBar::generateRandOrder()"
"SandwichBar::load()"
"SandwichBar::changeName()"
"SandwichBar::printDetails()"
"SandwichBar::addIngredient()"
"SandwichBar::addRecipe()"
"SandwichBar::lookup()"
"_ZN11SandwichBar10getRecipesB5cxx11Ev"
"SandwichBar::takeOrder()"
"SandwichBar::simulate(int)"
"SandwichBar::printHelp()"
"SandwichBar::printHeader()"
"SandwichBar::handleCommands()"
"SandwichBar::~SandwichBar()"
"std::vector<Recipe*, std::allocator<Recipe*> >::at(unsigned)"
"std::vector<Recipe*, std::allocator<Recipe*> >::size() const"
"SandwichBar::SandwichBar()"
"SandwichBar::setupBar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float)"
"std::setprecision(int)"
"std::fixed(std::ios_base&)"
"std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"
"std::operator~(std::_Ios_Fmtflags)"
"std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"
"std::__cxx11::stof(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*)"
"std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned*, int)"
"operator delete(void*, void*)"
"operator new(unsigned, void*)"
"std::char_traits<char>::length(char const*)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::base() const"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"Food** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Food*>(Food* const*, Food* const*, Food**)"
"std::_Iter_base<Food**, false>::_S_base(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"Food** std::__copy_move_a<false, Food* const*, Food**>(Food* const*, Food* const*, Food**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"std::_Niter_base<Food**>::iterator_type std::__niter_base<Food**>(Food**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::max_size() const"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"Food** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > > >(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >)"
"__gnu_cxx::new_allocator<Food*>::allocate(unsigned, void const*)"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Food** std::copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::allocator_traits<std::allocator<Food*> >::allocate(std::allocator<Food*>&, unsigned)"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"Food** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >::__normal_iterator(Food* const* const&)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_allocate(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"Food** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(unsigned, std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_create_storage(unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::allocator_traits<std::allocator<Food*> >::select_on_container_copy_construction(std::allocator<Food*> const&)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"Food** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, Food*>(__gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, __gnu_cxx::__normal_iterator<Food* const*, std::vector<Food*, std::allocator<Food*> > >, Food**, std::allocator<Food*>&)"
"std::vector<Food*, std::allocator<Food*> >::begin() const"
"std::vector<Food*, std::allocator<Food*> >::end() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::size() const"
"__gnu_cxx::__alloc_traits<std::allocator<Food*> >::_S_select_on_copy(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"std::vector<Food*, std::allocator<Food*> >::vector(std::vector<Food*, std::allocator<Food*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"_ZN8Sandwich5printB5cxx11Ev"
"Sandwich::getSubstitution()"
"Substitution::Substitution(Substitution const&)"
"Sandwich::hasSubstitution()"
"Sandwich::getRecipe()"
"Recipe::Recipe(Recipe const&)"
"Food::Food(Food const&)"
"Sandwich::getTotalCost()"
"Sandwich::make()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Sandwich::canMake()"
"Sandwich::~Sandwich()"
"Sandwich::Sandwich(Recipe*, Substitution*)"
"Sandwich::Sandwich(Recipe*)"
"std::move_iterator<Sandwich**>::base() const"
"std::_Iter_base<std::move_iterator<Sandwich**>, true>::_S_base(std::move_iterator<Sandwich**>)"
"Sandwich** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Iter_base<Sandwich**, false>::_S_base(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move_a2<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"std::_Miter_base<std::move_iterator<Sandwich**> >::iterator_type std::__miter_base<std::move_iterator<Sandwich**> >(std::move_iterator<Sandwich**>)"
"Sandwich** std::__copy_move_a<false, Sandwich* const*, Sandwich**>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"std::_Niter_base<Sandwich**>::iterator_type std::__niter_base<Sandwich**>(Sandwich**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"Sandwich** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > > >(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >)"
"Sandwich** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Sandwich*>(Sandwich* const*, Sandwich* const*, Sandwich**)"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"std::move_iterator<Sandwich**>::move_iterator(Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::max_size() const"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator()"
"Sandwich** std::copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::new_allocator(__gnu_cxx::new_allocator<Sandwich*> const&)"
"Sandwich** std::__copy_move_a<true, Sandwich**, Sandwich**>(Sandwich**, Sandwich**, Sandwich**)"
"Sandwich** std::uninitialized_copy<std::move_iterator<Sandwich**>, Sandwich**>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**)"
"__gnu_cxx::new_allocator<Sandwich*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Sandwich*> >::max_size(std::allocator<Sandwich*> const&)"
"_ZSt4moveIRSaIP8SandwichEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP8SandwichEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::deallocate(Sandwich**, unsigned)"
"std::allocator<Sandwich*>::allocator()"
"Sandwich** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl(std::allocator<Sandwich*> const&)"
"__gnu_cxx::new_allocator<Sandwich*>::~new_allocator()"
"std::allocator<Sandwich*>::allocator(std::allocator<Sandwich*> const&)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::__normal_iterator(Sandwich* const* const&)"
"void __gnu_cxx::new_allocator<Sandwich*>::destroy<Sandwich*>(Sandwich**)"
"Sandwich** std::__uninitialized_copy_a<std::move_iterator<Sandwich**>, Sandwich**, Sandwich*>(std::move_iterator<Sandwich**>, std::move_iterator<Sandwich**>, Sandwich**, std::allocator<Sandwich*>&)"
"std::move_iterator<Sandwich**> std::__make_move_if_noexcept_iterator<Sandwich**, std::move_iterator<Sandwich**> >(Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::allocate(std::allocator<Sandwich*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP8SandwichE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::__do_alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&, std::integral_constant<bool, true>)"
"void std::swap<Sandwich**>(Sandwich**&, Sandwich**&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::allocator<Sandwich*> const&)"
"void std::_Destroy_aux<true>::__destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::allocator_traits<std::allocator<Sandwich*> >::deallocate(std::allocator<Sandwich*>&, Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_Vector_impl()"
"Sandwich** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base(unsigned, std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Sandwich*> >::select_on_container_copy_construction(std::allocator<Sandwich*> const&)"
"__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >::base() const"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP8SandwichSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Sandwich*> >::destroy<Sandwich*>(std::allocator<Sandwich*>&, Sandwich**)"
"Sandwich** std::__uninitialized_move_if_noexcept_a<Sandwich**, Sandwich**, std::allocator<Sandwich*> >(Sandwich**, Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_allocate(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP8SandwichEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP8SandwichEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::__alloc_on_move<std::allocator<Sandwich*> >(std::allocator<Sandwich*>&, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::get_allocator() const"
"void std::_Destroy<Sandwich**>(Sandwich**, Sandwich**)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::~_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_deallocate(Sandwich**, unsigned)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_base()"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Sandwich*>::~allocator()"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"Sandwich** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, Sandwich*>(__gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, __gnu_cxx::__normal_iterator<Sandwich* const*, std::vector<Sandwich*, std::allocator<Sandwich*> > >, Sandwich**, std::allocator<Sandwich*>&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::begin() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::end() const"
"__gnu_cxx::__alloc_traits<std::allocator<Sandwich*> >::_S_select_on_copy(std::allocator<Sandwich*> const&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator() const"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector(std::vector<Sandwich*, std::allocator<Sandwich*> > const&)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::operator[](unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::_M_range_check(unsigned) const"
"_ZNSt6vectorIP8SandwichSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP8SandwichSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Sandwich**, Sandwich*>(Sandwich**, Sandwich**, std::allocator<Sandwich*>&)"
"std::_Vector_base<Sandwich*, std::allocator<Sandwich*> >::_M_get_Tp_allocator()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::~vector()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::vector()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"
"_ZN5Order10printOrderB5cxx11Ev"
"Order::getSandwiches()"
"Order::getTotalCost()"
"Order::makeOrder()"
"Order::updateTotalCost()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::push_back(Sandwich* const&)"
"Order::addSandwich(Sandwich*)"
"Order::~Order()"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::at(unsigned)"
"std::vector<Sandwich*, std::allocator<Sandwich*> >::size() const"
"Order::Order(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"_ZNSt6vectorIP8SandwichSaIS1_EEaSEOS3_"
"operator new(unsigned, void*)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::base() const"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator(__gnu_cxx::new_allocator<Ingredient*> const&)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"Ingredient** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"_ZSt4moveIRSaIP10IngredientEEONSt16remove_referenceIT_E4typeEOS5_"
"_ZSt4moveIRPP10IngredientEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(std::allocator<Ingredient*> const&)"
"std::allocator<Ingredient*>::allocator()"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl(std::allocator<Ingredient*> const&)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator(std::allocator<Ingredient*> const&)"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"Ingredient** std::__copy_move_a<false, Ingredient* const*, Ingredient**>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"std::_Niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Iter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >::__normal_iterator(Ingredient* const* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"void std::__do_alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&, std::integral_constant<bool, true>)"
"void std::swap<Ingredient**>(Ingredient**&, Ingredient**&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::allocator<Ingredient*> const&)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"Ingredient** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base(unsigned, std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_create_storage(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::select_on_container_copy_construction(std::allocator<Ingredient*> const&)"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"std::_Miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > > >(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"void std::__alloc_on_move<std::allocator<Ingredient*> >(std::allocator<Ingredient*>&, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::get_allocator() const"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Ingredient*>::~allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"Ingredient** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, Ingredient*>(__gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, __gnu_cxx::__normal_iterator<Ingredient* const*, std::vector<Ingredient*, std::allocator<Ingredient*> > >, Ingredient**, std::allocator<Ingredient*>&)"
"__gnu_cxx::__alloc_traits<std::allocator<Ingredient*> >::_S_select_on_copy(std::allocator<Ingredient*> const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector(std::vector<Ingredient*, std::allocator<Ingredient*> > const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::begin() const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::end() const"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP10IngredientSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP10IngredientSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"Substitution::getRemovals()"
"Substitution::getAdditions()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"_ZN12Substitution17printSubstitutionB5cxx11Ev"
"Substitution::getTotalRemoveCost()"
"Substitution::calculateCost(std::vector<Ingredient*, std::allocator<Ingredient*> >)"
"Substitution::getTotalAddCost()"
"Substitution::addRemoval(Ingredient*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Substitution::addAddition(Ingredient*)"
"Substitution::~Substitution()"
"Substitution::Substitution()"
"_ZNSt6vectorIP10IngredientSaIS1_EEaSEOS3_"
"operator new(unsigned, void*)"
"__gnu_cxx::new_allocator<Food*>::new_allocator()"
"__gnu_cxx::new_allocator<Food*>::new_allocator(__gnu_cxx::new_allocator<Food*> const&)"
"_ZSt4moveIRPP4FoodEONSt16remove_referenceIT_E4typeEOS5_"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base(std::allocator<Food*> const&)"
"std::allocator<Food*>::allocator()"
"__gnu_cxx::new_allocator<Food*>::deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl(std::allocator<Food*> const&)"
"__gnu_cxx::new_allocator<Food*>::~new_allocator()"
"std::allocator<Food*>::allocator(std::allocator<Food*> const&)"
"void std::__do_alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&, std::integral_constant<bool, true>)"
"void std::swap<Food**>(Food**&, Food**&)"
"std::vector<Food*, std::allocator<Food*> >::vector(std::allocator<Food*> const&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_Vector_impl()"
"void std::_Destroy_aux<true>::__destroy<Food**>(Food**, Food**)"
"std::allocator_traits<std::allocator<Food*> >::deallocate(std::allocator<Food*>&, Food**, unsigned)"
"_ZSt4moveIRSaIP4FoodEEONSt16remove_referenceIT_E4typeEOS5_"
"void std::__alloc_on_move<std::allocator<Food*> >(std::allocator<Food*>&, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::get_allocator() const"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_base()"
"void std::_Destroy<Food**>(Food**, Food**)"
"std::_Vector_base<Food*, std::allocator<Food*> >::~_Vector_base()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_deallocate(Food**, unsigned)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_Vector_impl::~_Vector_impl()"
"std::allocator<Food*>::~allocator()"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator() const"
"_ZNSt6vectorIP4FoodSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
"_ZSt4moveIRSt6vectorIP4FoodSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_"
"std::vector<Food*, std::allocator<Food*> >::vector()"
"void std::_Destroy<Food**, Food*>(Food**, Food**, std::allocator<Food*>&)"
"std::_Vector_base<Food*, std::allocator<Food*> >::_M_get_Tp_allocator()"
"std::vector<Food*, std::allocator<Food*> >::~vector()"
"Food::manageReferences()"
"Food::Food()"
"_ZNSt6vectorIP4FoodSaIS1_EEaSEOS3_"
"Food::~Food()"
"SimpleIngredient::SimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"std::_Iter_base<Ingredient**, false>::_S_base(Ingredient**)"
"std::move_iterator<Ingredient**>::base() const"
"std::_Niter_base<Ingredient**>::iterator_type std::__niter_base<Ingredient**>(Ingredient**)"
"std::_Iter_base<std::move_iterator<Ingredient**>, true>::_S_base(std::move_iterator<Ingredient**>)"
"Ingredient** std::__copy_move_a2<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"std::_Miter_base<std::move_iterator<Ingredient**> >::iterator_type std::__miter_base<std::move_iterator<Ingredient**> >(std::move_iterator<Ingredient**>)"
"Ingredient** std::copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"Ingredient** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Ingredient*>(Ingredient* const*, Ingredient* const*, Ingredient**)"
"Ingredient** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"std::move_iterator<Ingredient**>::move_iterator(Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::max_size() const"
"std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)"
"std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)"
"__gnu_cxx::new_allocator<Ingredient*>::new_allocator()"
"Ingredient** std::__copy_move_a<true, Ingredient**, Ingredient**>(Ingredient**, Ingredient**, Ingredient**)"
"Ingredient** std::uninitialized_copy<std::move_iterator<Ingredient**>, Ingredient**>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**)"
"__gnu_cxx::new_allocator<Ingredient*>::allocate(unsigned, void const*)"
"std::allocator_traits<std::allocator<Ingredient*> >::max_size(std::allocator<Ingredient*> const&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator() const"
"std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)"
"bool __gnu_cxx::__is_null_pointer<char>(char*)"
"__gnu_cxx::new_allocator<Ingredient*>::deallocate(Ingredient**, unsigned)"
"__gnu_cxx::new_allocator<Ingredient*>::~new_allocator()"
"std::allocator<Ingredient*>::allocator()"
"void __gnu_cxx::new_allocator<Ingredient*>::destroy<Ingredient*>(Ingredient**)"
"Ingredient** std::__uninitialized_copy_a<std::move_iterator<Ingredient**>, Ingredient**, Ingredient*>(std::move_iterator<Ingredient**>, std::move_iterator<Ingredient**>, Ingredient**, std::allocator<Ingredient*>&)"
"std::move_iterator<Ingredient**> std::__make_move_if_noexcept_iterator<Ingredient**, std::move_iterator<Ingredient**> >(Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::allocate(std::allocator<Ingredient*>&, unsigned)"
"unsigned const& std::max<unsigned>(unsigned const&, unsigned const&)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::max_size() const"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_IRKS2_EEEvPT_DpOT0_"
"_ZN9__gnu_cxx13new_allocatorIP10IngredientE9constructIS2_JRKS2_EEEvPT_DpOT0_"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)"
"void std::_Destroy_aux<true>::__destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::allocator_traits<std::allocator<Ingredient*> >::deallocate(std::allocator<Ingredient*>&, Ingredient**, unsigned)"
"std::allocator<Ingredient*>::~allocator()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::_Vector_impl()"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIIRKS1_EEEvDpOT_"
"_ZNSt6vectorIP10IngredientSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_"
"void std::allocator_traits<std::allocator<Ingredient*> >::destroy<Ingredient*>(std::allocator<Ingredient*>&, Ingredient**)"
"Ingredient** std::__uninitialized_move_if_noexcept_a<Ingredient**, Ingredient**, std::allocator<Ingredient*> >(Ingredient**, Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_allocate(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_check_len(unsigned, char const*) const"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_"
"_ZNSt16allocator_traitsISaIP10IngredientEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_"
"_ZSt7forwardIRKP10IngredientEOT_RNSt16remove_referenceIS4_E4typeE"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type)"
"void std::_Destroy<Ingredient**>(Ingredient**, Ingredient**)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::~_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_deallocate(Ingredient**, unsigned)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_base()"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_Vector_impl::~_Vector_impl()"
"void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*)"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*, void>(char*, char*, std::allocator<char> const&)"
"_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_"
"void std::_Destroy<Ingredient**, Ingredient*>(Ingredient**, Ingredient**, std::allocator<Ingredient*>&)"
"std::_Vector_base<Ingredient*, std::allocator<Ingredient*> >::_M_get_Tp_allocator()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::~vector()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::operator[](unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::_M_range_check(unsigned) const"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::vector()"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()"
"Inventory::getRandomIngredient()"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_"
"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"
"_ZN9Inventory19getInventoryDetailsB5cxx11Ev"
"Inventory::getIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::findItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Inventory::addComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::push_back(Ingredient* const&)"
"Inventory::addSimpleIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, float)"
"Inventory::~Inventory()"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::at(unsigned)"
"std::vector<Ingredient*, std::allocator<Ingredient*> >::size() const"
"Inventory::Inventory()"
"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned, char const*, char*), unsigned, char const*, ...)"
"std::__cxx11::to_string(int)"
"operator new(unsigned, void*)"
"Ingredient::Ingredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"Ingredient::~Ingredient()"
"ComplexIngredient::ComplexIngredient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::vector<Ingredient*, std::allocator<Ingredient*> >*)"

"_GLOBAL__sub_I_main"
"__static_initialization_and_destruction_0(int, int)"

